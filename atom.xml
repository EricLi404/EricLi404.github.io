<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DropLet</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://ericli.top/"/>
  <updated>2018-01-22T11:10:08.429Z</updated>
  <id>http://ericli.top/</id>
  
  <author>
    <name>EricLi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>macOS完全卸载使用dmg安装的mysql</title>
    <link href="http://ericli.top/2018/01/22/macOS%E5%AE%8C%E5%85%A8%E5%8D%B8%E8%BD%BD%E4%BD%BF%E7%94%A8dmg%E5%AE%89%E8%A3%85%E7%9A%84mysql/"/>
    <id>http://ericli.top/2018/01/22/macOS完全卸载使用dmg安装的mysql/</id>
    <published>2018-01-21T16:00:00.000Z</published>
    <updated>2018-01-22T11:10:08.429Z</updated>
    
    <content type="html"><![CDATA[<h2 id="凤头"><a href="#凤头" class="headerlink" title="凤头"></a>凤头</h2><p>事情的起因是当我执行这段sql语句时报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `user` (</span><br><span class="line">  `id` int(11) unsigned NOT NULL AUTO_INCREMENT, </span><br><span class="line">  `name` varchar(20) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;姓名&apos;,</span><br><span class="line">  `email` varchar(30) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;邮箱&apos;,</span><br><span class="line">  `is_admin` tinyint(1) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;是否是超级管理员 1表示是 0 表示不是&apos;,</span><br><span class="line">  `status` tinyint(1) NOT NULL DEFAULT &apos;1&apos; COMMENT &apos;状态 1：有效 0：无效&apos;,</span><br><span class="line">  `updated_time` timestamp NOT NULL DEFAULT &apos;0000-00-00 00:00:00&apos; COMMENT &apos;最后一次更新时间&apos;,</span><br><span class="line">  `created_time` timestamp NOT NULL DEFAULT &apos;0000-00-00 00:00:00&apos; COMMENT &apos;插入时间&apos;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `idx_email` (`email`)</span><br><span class="line">) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COMMENT=&apos;用户表&apos;;</span><br></pre></td></tr></table></figure><p>报错的原因是<code>timestamp</code> 在目前版本默认不支持设置<code>0000-00-00 00:00:00</code> 为默认值。</p><hr><h2 id="猪肚"><a href="#猪肚" class="headerlink" title="猪肚"></a>猪肚</h2><h3 id="改默认时间"><a href="#改默认时间" class="headerlink" title="改默认时间"></a>改默认时间</h3><p>我在慕课网相关评论里边看到，只要把默认时间设置为<code>1997-01-01 00:00:00</code> 就可以了。</p><p>尝试&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;失败</p><h3 id="改配置文件my-cnf"><a href="#改配置文件my-cnf" class="headerlink" title="改配置文件my.cnf"></a>改配置文件<code>my.cnf</code></h3><p>据说可以修改<code>/etc/my.cnf</code> 中的<code>sql_mode</code> 使<code>timestamp</code> 支持设置<code>0000-00-00 00:00:00</code> 为默认值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sql_mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br></pre></td></tr></table></figure><p>然而我却发现： 我并没有 <code>/etc/my.cnf</code> …..</p><p>于是，将<code>/usr/local/mysql/support-files/my-default.cnf</code> 复制到 <code>/etc/my.cnf</code></p><p>并配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sql_mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br></pre></td></tr></table></figure><p>然后进入系统设置，重启 mysql ，结果…..</p><hr><h2 id="豹尾"><a href="#豹尾" class="headerlink" title="豹尾"></a>豹尾</h2><p>接下来我就开始准备卸载 mysql ，转用 brew 重装 mysql</p><h3 id="删除-mysql-管理程序"><a href="#删除-mysql-管理程序" class="headerlink" title="删除 mysql 管理程序"></a>删除 mysql 管理程序</h3><p>进入 「系统偏好设置」 右键点 「mysql」 删除之。</p><h3 id="～～擦屁股～～-删除-mysql-残留文件"><a href="#～～擦屁股～～-删除-mysql-残留文件" class="headerlink" title="～～擦屁股～～ 删除 mysql 残留文件"></a>～～擦屁股～～ 删除 mysql 残留文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf /usr/local/mysql</span><br><span class="line">sudo rm -rf /usr/local/opt/mysql</span><br><span class="line">sudo rm -rf /usr/local/share/mysql</span><br><span class="line">sudo rm -rf /usr/local/var/mysql</span><br><span class="line">sudo rm -rf /usr/local/include/mysql</span><br><span class="line">sudo rm -rf /usr/local/Cellar/mysql</span><br><span class="line">sudo rm -rf /usr/local/bin/mysql</span><br></pre></td></tr></table></figure><p>大概，，，删除完了吧。。。CleanMyMac 再清理一下吧，，，可怕</p>]]></content>
    
    <summary type="html">
    
      当年因为脑子进水了用mysql官网的dmg安装了mysql；事实证明，脑子进的水，早晚得自己一点一点排出来。
    
    </summary>
    
    
      <category term="macOS" scheme="http://ericli.top/tags/macOS/"/>
    
      <category term="database" scheme="http://ericli.top/tags/database/"/>
    
      <category term="MySQL" scheme="http://ericli.top/tags/MySQL/"/>
    
      <category term="brew" scheme="http://ericli.top/tags/brew/"/>
    
  </entry>
  
  <entry>
    <title>MySQL所有者不是mysql的解决方案</title>
    <link href="http://ericli.top/2018/01/22/MySQL%E6%89%80%E6%9C%89%E8%80%85%E4%B8%8D%E6%98%AFmysql%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://ericli.top/2018/01/22/MySQL所有者不是mysql的解决方案/</id>
    <published>2018-01-21T16:00:00.000Z</published>
    <updated>2018-01-22T05:58:17.339Z</updated>
    
    <content type="html"><![CDATA[<p>之前解决了 brew 的权限问题，今天发现在解决的过程中一不小心把 MySQL 的权限搞丢了。<br>前情提要：<a href="http://blog.ericli.top/2018/01/18/mac%20brew%20权限问题解决记录/" target="_blank" rel="noopener">mac brew 权限问题解决记录</a></p><p>在给 brew 权限的过程中，把 <code>/usr/local/mysql</code> 的的所有权一不小心也给了 brew  。</p><p>所以导致报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Warning:The /usr/local/mysql/data directory is not owned by the &apos;mysql&apos; or &apos;_mysql&apos; user.</span><br></pre></td></tr></table></figure><p>如图：<br><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fnpc5vydl1j30ik08qdgw.jpg" alt=""></p><p><strong>解决方案</strong><br>改所有者喽。。。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R mysql:mysql /usr/local/mysql</span><br><span class="line">sudo chown -R mysql:mysql /usr/local/mysql/data</span><br></pre></td></tr></table></figure><p>EOF</p>]]></content>
    
    <summary type="html">
    
      之前解决了 brew 的权限问题，今天发现在解决的过程中一不小心把 MySQL 的权限搞丢了。。。。
    
    </summary>
    
    
      <category term="macOS" scheme="http://ericli.top/tags/macOS/"/>
    
      <category term="database" scheme="http://ericli.top/tags/database/"/>
    
      <category term="Linux" scheme="http://ericli.top/tags/Linux/"/>
    
      <category term="MySQL" scheme="http://ericli.top/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL外键踩坑记录</title>
    <link href="http://ericli.top/2018/01/22/MySQL%E5%A4%96%E9%94%AE%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    <id>http://ericli.top/2018/01/22/MySQL外键踩坑记录/</id>
    <published>2018-01-21T16:00:00.000Z</published>
    <updated>2018-01-22T11:42:40.644Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>MySQL有两种常用的引擎类型：MyISAM和InnoDB。目前只有InnoDB引擎类型支持外键约束。</p></li><li><p>外键的使用需要满足下列的条件：</p><ul><li>两张表必须都是InnoDB表，并且它们没有临时表。</li><li>建立外键关系的对应列必须具有相似的InnoDB内部数据类型。</li><li>建立外键关系的对应列必须建立了索引。</li><li>假如显式的给出了CONSTRAINT symbol，那symbol在数据库中必须是唯一的。假如没有显式的给出，InnoDB会自动的创建。</li></ul></li><li><p>外键的四种动作介绍：（默认是RESTRICT）</p><ul><li>CASCADE: 从父表中删除或更新对应的行，同时自动的删除或更新自表中匹配的行。ON DELETE CANSCADE和ON UPDATE CANSCADE都被InnoDB所支持。</li><li>SET NULL: 从父表中删除或更新对应的行，同时将子表中的外键列设为空。注意，这些在外键列没有被设为NOT NULL时才有效。ON DELETE SET NULL和ON UPDATE SET SET NULL都被InnoDB所支持。</li><li>NO ACTION: InnoDB拒绝删除或者更新父表。</li><li>RESTRICT: 拒绝删除或者更新父表。指定RESTRICT（或者NO ACTION）和忽略ON DELETE或者ON UPDATE选项的效果是一样的。</li></ul></li><li><p>外键的四种动作选择：</p><ul><li>父表更新时子表也更新（CASCADE），父表删除时如果子表有匹配的项，删除失败（RESTRICT）； </li><li>父表更新时子表也更新（CASCADE），父表删除时子表匹配的项也删除 （RESTRICT）。</li></ul></li><li><p><code>Cannot add foreign key constraint</code>, 这是创建外键时经常遇到的一个问题，排查方向：</p><ul><li>两边的类型属性等有出入（注意有些软件默认生成的id是有<code>unsigned</code> 的，注意观察两者类型是否一致）</li><li>某个表里面已经有值了</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      记录了使用MySQL外键时踩过的坑。
    
    </summary>
    
    
      <category term="database" scheme="http://ericli.top/tags/database/"/>
    
      <category term="MySQL" scheme="http://ericli.top/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>mac brew 权限问题解决记录</title>
    <link href="http://ericli.top/2018/01/18/mac%20brew%20%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E8%AE%B0%E5%BD%95/"/>
    <id>http://ericli.top/2018/01/18/mac brew 权限问题解决记录/</id>
    <published>2018-01-17T16:00:00.000Z</published>
    <updated>2018-01-20T16:23:40.295Z</updated>
    
    <content type="html"><![CDATA[<p>曾经，<code>brew</code> 是使用<code>root</code> 权限运行的，如今，没有了<code>root</code> 权限，<code>brew</code>安装软件的时候经常会遇到缺少权限的问题。</p><h2 id="更改权限"><a href="#更改权限" class="headerlink" title="更改权限"></a>更改权限</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R $(whoami):admin /usr/local</span><br><span class="line">// 第一条运行失败了一半</span><br><span class="line">sudo chown -R $(whoami):admin /usr/local/Cellar</span><br><span class="line">sudo chown -R $(whoami):admin /usr/local/Homebrew</span><br><span class="line">sudo chown -R $(whoami):admin /usr/local/lib</span><br></pre></td></tr></table></figure><h2 id="使用「医生」诊断因更改权限造成的问题"><a href="#使用「医生」诊断因更改权限造成的问题" class="headerlink" title="使用「医生」诊断因更改权限造成的问题"></a>使用「医生」诊断因更改权限造成的问题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew doctor</span><br></pre></td></tr></table></figure><p>运行 <code>doctor</code> 后，输出如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br></pre></td><td class="code"><pre><span class="line">Please note that these warnings are just used to help the Homebrew maintainers</span><br><span class="line">with debugging if you file an issue. If everything you use Homebrew for is</span><br><span class="line">working fine: please don&apos;t worry or file an issue; just ignore this. Thanks!</span><br><span class="line"></span><br><span class="line">Warning: Suspicious Homebrew/brew git origin remote found.</span><br><span class="line"></span><br><span class="line">With a non-standard origin, Homebrew won&apos;t pull updates from</span><br><span class="line">the main repository. The current git origin is:</span><br><span class="line">  git://mirrors.ustc.edu.cn/brew.git</span><br><span class="line"></span><br><span class="line">Unless you have compelling reasons, consider setting the</span><br><span class="line">origin remote to point at the main repository by running:</span><br><span class="line">//执行这句</span><br><span class="line">  git -C &quot;/usr/local/Homebrew&quot; remote set-url origin https://github.com/Homebrew/brew.git</span><br><span class="line"></span><br><span class="line">Warning: Unbrewed header files were found in /usr/local/include.</span><br><span class="line">If you didn&apos;t put them there on purpose they could cause problems when</span><br><span class="line">building Homebrew formulae, and may need to be deleted.</span><br><span class="line"></span><br><span class="line">//删除 /usr/local/include/node 文件夹</span><br><span class="line">Unexpected header files:</span><br><span class="line">  /usr/local/include/node/android-ifaddrs.h</span><br><span class="line">  /usr/local/include/node/ares.h</span><br><span class="line">  /usr/local/include/node/ares_build.h</span><br><span class="line">  /usr/local/include/node/ares_rules.h</span><br><span class="line">  /usr/local/include/node/ares_version.h</span><br><span class="line">  /usr/local/include/node/libplatform/libplatform.h</span><br><span class="line">  /usr/local/include/node/libplatform/v8-tracing.h</span><br><span class="line">  /usr/local/include/node/nameser.h</span><br><span class="line">  /usr/local/include/node/node.h</span><br><span class="line">  /usr/local/include/node/node_buffer.h</span><br><span class="line">  /usr/local/include/node/node_object_wrap.h</span><br><span class="line">  /usr/local/include/node/node_version.h</span><br><span class="line">  /usr/local/include/node/openssl/aes.h</span><br><span class="line">  /usr/local/include/node/openssl/archs/BSD-x86/opensslconf.h</span><br><span class="line">  /usr/local/include/node/openssl/archs/BSD-x86_64/opensslconf.h</span><br><span class="line">  /usr/local/include/node/openssl/archs/VC-WIN32/opensslconf.h</span><br><span class="line">  /usr/local/include/node/openssl/archs/VC-WIN64A/opensslconf.h</span><br><span class="line">  /usr/local/include/node/openssl/archs/aix-gcc/opensslconf.h</span><br><span class="line">  /usr/local/include/node/openssl/archs/aix64-gcc/opensslconf.h</span><br><span class="line">  /usr/local/include/node/openssl/archs/darwin-i386-cc/opensslconf.h</span><br><span class="line">  /usr/local/include/node/openssl/archs/darwin64-x86_64-cc/opensslconf.h</span><br><span class="line">  /usr/local/include/node/openssl/archs/linux-aarch64/opensslconf.h</span><br><span class="line">  /usr/local/include/node/openssl/archs/linux-armv4/opensslconf.h</span><br><span class="line">  /usr/local/include/node/openssl/archs/linux-elf/opensslconf.h</span><br><span class="line">  /usr/local/include/node/openssl/archs/linux-ppc/opensslconf.h</span><br><span class="line">  /usr/local/include/node/openssl/archs/linux-ppc64/opensslconf.h</span><br><span class="line">  /usr/local/include/node/openssl/archs/linux-x32/opensslconf.h</span><br><span class="line">  /usr/local/include/node/openssl/archs/linux-x86_64/opensslconf.h</span><br><span class="line">  /usr/local/include/node/openssl/archs/linux32-s390x/opensslconf.h</span><br><span class="line">  /usr/local/include/node/openssl/archs/linux64-s390x/opensslconf.h</span><br><span class="line">  /usr/local/include/node/openssl/archs/solaris-x86-gcc/opensslconf.h</span><br><span class="line">  /usr/local/include/node/openssl/archs/solaris64-x86_64-gcc/opensslconf.h</span><br><span class="line">  /usr/local/include/node/openssl/asn1.h</span><br><span class="line">  /usr/local/include/node/openssl/asn1_mac.h</span><br><span class="line">  /usr/local/include/node/openssl/asn1t.h</span><br><span class="line">  /usr/local/include/node/openssl/bio.h</span><br><span class="line">  /usr/local/include/node/openssl/blowfish.h</span><br><span class="line">  /usr/local/include/node/openssl/bn.h</span><br><span class="line">  /usr/local/include/node/openssl/buffer.h</span><br><span class="line">  /usr/local/include/node/openssl/camellia.h</span><br><span class="line">  /usr/local/include/node/openssl/cast.h</span><br><span class="line">  /usr/local/include/node/openssl/cmac.h</span><br><span class="line">  /usr/local/include/node/openssl/cms.h</span><br><span class="line">  /usr/local/include/node/openssl/comp.h</span><br><span class="line">  /usr/local/include/node/openssl/conf.h</span><br><span class="line">  /usr/local/include/node/openssl/conf_api.h</span><br><span class="line">  /usr/local/include/node/openssl/crypto.h</span><br><span class="line">  /usr/local/include/node/openssl/des.h</span><br><span class="line">  /usr/local/include/node/openssl/des_old.h</span><br><span class="line">  /usr/local/include/node/openssl/dh.h</span><br><span class="line">  /usr/local/include/node/openssl/dsa.h</span><br><span class="line">  /usr/local/include/node/openssl/dso.h</span><br><span class="line">  /usr/local/include/node/openssl/dtls1.h</span><br><span class="line">  /usr/local/include/node/openssl/e_os2.h</span><br><span class="line">  /usr/local/include/node/openssl/ebcdic.h</span><br><span class="line">  /usr/local/include/node/openssl/ec.h</span><br><span class="line">  /usr/local/include/node/openssl/ecdh.h</span><br><span class="line">  /usr/local/include/node/openssl/ecdsa.h</span><br><span class="line">  /usr/local/include/node/openssl/engine.h</span><br><span class="line">  /usr/local/include/node/openssl/err.h</span><br><span class="line">  /usr/local/include/node/openssl/evp.h</span><br><span class="line">  /usr/local/include/node/openssl/hmac.h</span><br><span class="line">  /usr/local/include/node/openssl/idea.h</span><br><span class="line">  /usr/local/include/node/openssl/krb5_asn.h</span><br><span class="line">  /usr/local/include/node/openssl/kssl.h</span><br><span class="line">  /usr/local/include/node/openssl/lhash.h</span><br><span class="line">  /usr/local/include/node/openssl/md4.h</span><br><span class="line">  /usr/local/include/node/openssl/md5.h</span><br><span class="line">  /usr/local/include/node/openssl/mdc2.h</span><br><span class="line">  /usr/local/include/node/openssl/modes.h</span><br><span class="line">  /usr/local/include/node/openssl/obj_mac.h</span><br><span class="line">  /usr/local/include/node/openssl/objects.h</span><br><span class="line">  /usr/local/include/node/openssl/ocsp.h</span><br><span class="line">  /usr/local/include/node/openssl/opensslconf.h</span><br><span class="line">  /usr/local/include/node/openssl/opensslv.h</span><br><span class="line">  /usr/local/include/node/openssl/ossl_typ.h</span><br><span class="line">  /usr/local/include/node/openssl/pem.h</span><br><span class="line">  /usr/local/include/node/openssl/pem2.h</span><br><span class="line">  /usr/local/include/node/openssl/pkcs12.h</span><br><span class="line">  /usr/local/include/node/openssl/pkcs7.h</span><br><span class="line">  /usr/local/include/node/openssl/pqueue.h</span><br><span class="line">  /usr/local/include/node/openssl/rand.h</span><br><span class="line">  /usr/local/include/node/openssl/rc2.h</span><br><span class="line">  /usr/local/include/node/openssl/rc4.h</span><br><span class="line">  /usr/local/include/node/openssl/ripemd.h</span><br><span class="line">  /usr/local/include/node/openssl/rsa.h</span><br><span class="line">  /usr/local/include/node/openssl/safestack.h</span><br><span class="line">  /usr/local/include/node/openssl/seed.h</span><br><span class="line">  /usr/local/include/node/openssl/sha.h</span><br><span class="line">  /usr/local/include/node/openssl/srp.h</span><br><span class="line">  /usr/local/include/node/openssl/srtp.h</span><br><span class="line">  /usr/local/include/node/openssl/ssl.h</span><br><span class="line">  /usr/local/include/node/openssl/ssl2.h</span><br><span class="line">  /usr/local/include/node/openssl/ssl23.h</span><br><span class="line">  /usr/local/include/node/openssl/ssl3.h</span><br><span class="line">  /usr/local/include/node/openssl/stack.h</span><br><span class="line">  /usr/local/include/node/openssl/symhacks.h</span><br><span class="line">  /usr/local/include/node/openssl/tls1.h</span><br><span class="line">  /usr/local/include/node/openssl/ts.h</span><br><span class="line">  /usr/local/include/node/openssl/txt_db.h</span><br><span class="line">  /usr/local/include/node/openssl/ui.h</span><br><span class="line">  /usr/local/include/node/openssl/ui_compat.h</span><br><span class="line">  /usr/local/include/node/openssl/whrlpool.h</span><br><span class="line">  /usr/local/include/node/openssl/x509.h</span><br><span class="line">  /usr/local/include/node/openssl/x509_vfy.h</span><br><span class="line">  /usr/local/include/node/openssl/x509v3.h</span><br><span class="line">  /usr/local/include/node/pthread-barrier.h</span><br><span class="line">  /usr/local/include/node/stdint-msvc2008.h</span><br><span class="line">  /usr/local/include/node/tree.h</span><br><span class="line">  /usr/local/include/node/uv-aix.h</span><br><span class="line">  /usr/local/include/node/uv-bsd.h</span><br><span class="line">  /usr/local/include/node/uv-darwin.h</span><br><span class="line">  /usr/local/include/node/uv-errno.h</span><br><span class="line">  /usr/local/include/node/uv-linux.h</span><br><span class="line">  /usr/local/include/node/uv-os390.h</span><br><span class="line">  /usr/local/include/node/uv-sunos.h</span><br><span class="line">  /usr/local/include/node/uv-threadpool.h</span><br><span class="line">  /usr/local/include/node/uv-unix.h</span><br><span class="line">  /usr/local/include/node/uv-version.h</span><br><span class="line">  /usr/local/include/node/uv-win.h</span><br><span class="line">  /usr/local/include/node/uv.h</span><br><span class="line">  /usr/local/include/node/v8-debug.h</span><br><span class="line">  /usr/local/include/node/v8-experimental.h</span><br><span class="line">  /usr/local/include/node/v8-inspector-protocol.h</span><br><span class="line">  /usr/local/include/node/v8-inspector.h</span><br><span class="line">  /usr/local/include/node/v8-platform.h</span><br><span class="line">  /usr/local/include/node/v8-profiler.h</span><br><span class="line">  /usr/local/include/node/v8-testing.h</span><br><span class="line">  /usr/local/include/node/v8-util.h</span><br><span class="line">  /usr/local/include/node/v8-version.h</span><br><span class="line">  /usr/local/include/node/v8.h</span><br><span class="line">  /usr/local/include/node/v8config.h</span><br><span class="line">  /usr/local/include/node/zconf.h</span><br><span class="line">  /usr/local/include/node/zlib.h</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//挨个 brew link</span><br><span class="line">Warning: You have unlinked kegs in your Cellar</span><br><span class="line">Leaving kegs unlinked can lead to build-trouble and cause brews that depend on</span><br><span class="line">those kegs to fail to run properly once built. Run `brew link` on these:</span><br><span class="line">  pkg-config</span><br><span class="line">  vim</span><br><span class="line">  libtiff</span><br><span class="line">  libtool</span><br><span class="line">  coreutils</span><br><span class="line">  jansson</span><br><span class="line">  wget</span><br><span class="line">  gdbm</span><br><span class="line">  imap-uw</span><br><span class="line">  freetype</span><br><span class="line">  python</span><br><span class="line">  highlight</span><br><span class="line">  boost</span><br><span class="line">  cscope</span><br><span class="line">  libyaml</span><br><span class="line">  jemalloc</span><br><span class="line">  composer</span><br><span class="line">  perl</span><br><span class="line">  webp</span><br><span class="line">  c-ares</span><br><span class="line">  xz</span><br><span class="line">  unixodbc</span><br><span class="line">  lua</span><br><span class="line">  cunit</span><br><span class="line">  fontconfig</span><br><span class="line">  archey</span><br><span class="line">  spdylay</span><br><span class="line">  htop</span><br><span class="line">  php71</span><br><span class="line">  macvim</span><br><span class="line">  freetds</span><br><span class="line">  autoconf</span><br><span class="line">  gd</span><br><span class="line">  libevent</span><br><span class="line">  rename</span><br><span class="line">  pcre</span><br><span class="line">  imagemagick</span><br><span class="line">  makedepend</span><br><span class="line">  libev</span><br><span class="line">  ruby</span><br><span class="line">  automake</span><br><span class="line"></span><br><span class="line">Warning: Homebrew&apos;s sbin was not found in your PATH but you have installed</span><br><span class="line">formulae that put executables in /usr/local/sbin.</span><br><span class="line">Consider setting the PATH for example like so</span><br><span class="line"></span><br><span class="line">//执行这句，然后 source ~./zshrc</span><br><span class="line">  echo &apos;export PATH=&quot;/usr/local/sbin:$PATH&quot;&apos; &gt;&gt; ~/.zshrc</span><br><span class="line"></span><br><span class="line">Warning: Some installed formula are missing dependencies.</span><br><span class="line">You should `brew install` the missing dependencies:</span><br><span class="line"></span><br><span class="line">//执行这句</span><br><span class="line">  brew install libidn2 libunistring</span><br><span class="line"></span><br><span class="line">Run `brew missing` for more details.</span><br></pre></td></tr></table></figure><p>根据提示完成上文注释中的操作即可，</p><p>然后执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew prune  </span><br><span class="line">brew update</span><br></pre></td></tr></table></figure><p>All Done.</p>]]></content>
    
    <summary type="html">
    
      曾经，brew 是使用 root 权限运行的，如今，没有了 root 权限，brew 安装软件的时候经常会遇到缺少权限的问题。本文记录了赋予 brew 权限的方案。
    
    </summary>
    
    
      <category term="macOS" scheme="http://ericli.top/tags/macOS/"/>
    
      <category term="brew" scheme="http://ericli.top/tags/brew/"/>
    
  </entry>
  
  <entry>
    <title>Alfred 3 等破解版软件每次开机运行后都提示是否允许访问通讯录</title>
    <link href="http://ericli.top/2017/11/09/Alfred%203%20%E7%AD%89%E7%A0%B4%E8%A7%A3%E7%89%88%E8%BD%AF%E4%BB%B6%E6%AF%8F%E6%AC%A1%E5%BC%80%E6%9C%BA%E8%BF%90%E8%A1%8C%E5%90%8E%E9%83%BD%E6%8F%90%E7%A4%BA%E6%98%AF%E5%90%A6%E5%85%81%E8%AE%B8%E8%AE%BF%E9%97%AE%E9%80%9A%E8%AE%AF%E5%BD%95/"/>
    <id>http://ericli.top/2017/11/09/Alfred 3 等破解版软件每次开机运行后都提示是否允许访问通讯录/</id>
    <published>2017-11-08T16:00:00.000Z</published>
    <updated>2018-01-21T12:51:55.914Z</updated>
    
    <content type="html"><![CDATA[<p>和谐版的Alfred 3 在每次开机后，都会提示“是否允许访问通讯录”的弹窗，让人不胜其烦。<br>这是因为和谐片的App丢失了签名导致不会自动加入系统。</p><p>以 Alfred 3 为例的处理方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo codesign -f -d -s - /Applications/Alfred\ 3.app/Contents/Frameworks/Alfred\ Framework.framework/Versions/A/Alfred\ Framework</span><br></pre></td></tr></table></figure></p><p>感谢<a href="http://xclient.info" target="_blank" rel="noopener">xclient.info</a></p>]]></content>
    
    <summary type="html">
    
      和谐版的Alfred 3 在每次开机后，都会提示“是否允许访问通讯录”的弹窗，让人不胜其烦。本文记录了其解决方案，方案来自[xclient.info](http://xclient.info)。
    
    </summary>
    
    
      <category term="macOS" scheme="http://ericli.top/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>根据先序和中序遍历重建二叉树Java实现</title>
    <link href="http://ericli.top/2017/11/09/%E6%A0%B9%E6%8D%AE%E5%85%88%E5%BA%8F%E5%92%8C%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86%E9%87%8D%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91Java%E5%AE%9E%E7%8E%B0/"/>
    <id>http://ericli.top/2017/11/09/根据先序和中序遍历重建二叉树Java实现/</id>
    <published>2017-11-08T16:00:00.000Z</published>
    <updated>2018-01-21T13:04:19.793Z</updated>
    
    <content type="html"><![CDATA[<p>《剑指offer》的第五题：</p><blockquote><p>题目描述：<br>输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。<br><br><br>时间限制：1秒  空间限制：32768K </p></blockquote><p>先来分析一下前序遍历和中序遍历得到的结果，</p><p>前序遍历第一位是根节点；<br>中序遍历中，根节点左边的是根节点的左子树，右边是根节点的右子树。</p><p>例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}。</p><p>首先，根节点 是{ 1 }；<br>左子树是：前序{ 2,4,7 } ，中序{ 4,7,2 }；<br>右子树是：前序{ 3,5,6,8 } ，中序{ 5,3,8,6 }；</p><p>这时，如果我们把左子树和右子树分别作为新的二叉树，则可以求出其根节点，左子树和右子树。</p><p>这样，一直用这个方式，就可以实现重建二叉树。</p><p>下面是代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">//首先建立一个二叉树类</span><br><span class="line"> public class TreeNode &#123;</span><br><span class="line">    int val;</span><br><span class="line">     TreeNode left;</span><br><span class="line">     TreeNode right;</span><br><span class="line">    TreeNode(int x) &#123; </span><br><span class="line">  val = x; </span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> //solution类，实现重建二叉树</span><br><span class="line">public class Solution &#123;</span><br><span class="line">    //主功能函数</span><br><span class="line">    public static TreeNode reConstructBinaryTree(int [] pre,int [] in) &#123;</span><br><span class="line">    if(pre == null || in == null)&#123;</span><br><span class="line">    return null;</span><br><span class="line">    &#125;</span><br><span class="line">    TreeNode mm = reConstructBinaryTreeCore(pre, in, 0, pre.length-1, 0, in.length-1);</span><br><span class="line">    return mm;</span><br><span class="line">    &#125;</span><br><span class="line">    //核心递归</span><br><span class="line">    public static TreeNode reConstructBinaryTreeCore(int[] pre, int[] in, int preStart, int preEnd, int inStart, int inEnd) &#123;</span><br><span class="line">    TreeNode tree = new TreeNode(pre[preStart]);</span><br><span class="line">    tree.left = null;</span><br><span class="line">    tree.right = null;</span><br><span class="line">    if (preStart == preEnd &amp;&amp; inStart == inEnd) &#123;</span><br><span class="line">return tree;</span><br><span class="line">&#125;</span><br><span class="line">int root = 0;</span><br><span class="line">for(root= inStart; root &lt; inEnd; root++)&#123;</span><br><span class="line">if (pre[preStart] == in[root]) &#123;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">int leifLength = root - inStart;</span><br><span class="line">int rightLength = inEnd - root;</span><br><span class="line">if (leifLength &gt; 0) &#123;</span><br><span class="line">tree.left = reConstructBinaryTreeCore(pre, in, preStart+1, preStart+leifLength, inStart, root-1);</span><br><span class="line">&#125;</span><br><span class="line">if (rightLength &gt; 0) &#123;</span><br><span class="line">tree.right = reConstructBinaryTreeCore(pre, in, preStart+1+leifLength, preEnd, root+1, inEnd);</span><br><span class="line">&#125;</span><br><span class="line">return tree;</span><br><span class="line">&#125;</span><br><span class="line">  //将二叉树先序遍历，用于测试结果</span><br><span class="line">    public static void preTraverseBinTree(TreeNode node)&#123;</span><br><span class="line">        if (node==null) &#123;</span><br><span class="line">              return;</span><br><span class="line">          &#125;</span><br><span class="line">        System.out.print(node.val+&quot;,&quot;);</span><br><span class="line">        if (node.left!=null) &#123;</span><br><span class="line">            preTraverseBinTree(node.left);</span><br><span class="line">          &#125;</span><br><span class="line">        if(node.right!=null)&#123;</span><br><span class="line">            preTraverseBinTree(node.right);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">//将二叉树中序遍历，用于测试结果</span><br><span class="line">    public static void inTraverseBinTree(TreeNode node)&#123;</span><br><span class="line">        if (node==null) &#123;</span><br><span class="line">              return;</span><br><span class="line">          &#125;</span><br><span class="line">        if (node.left!=null) &#123;</span><br><span class="line">            inTraverseBinTree(node.left);</span><br><span class="line">          &#125;</span><br><span class="line">        System.out.print(node.val+&quot;,&quot;);</span><br><span class="line">        if(node.right!=null)&#123;</span><br><span class="line">            inTraverseBinTree(node.right);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  //将二叉树后序遍历，用于测试结果</span><br><span class="line">    public static void postTraverseBinTree(TreeNode node)&#123;</span><br><span class="line">        if (node==null) &#123;</span><br><span class="line">              return;</span><br><span class="line">          &#125;</span><br><span class="line">        if (node.left!=null) &#123;</span><br><span class="line">            postTraverseBinTree(node.left);</span><br><span class="line">          &#125;</span><br><span class="line">        if(node.right!=null)&#123;</span><br><span class="line">            postTraverseBinTree(node.right);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(node.val+&quot;,&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      //主函数，用于测试结果</span><br><span class="line">    public static void main(String[] args)&#123;</span><br><span class="line">        int pre[] = &#123;1,2,4,7,3,5,8,9,6&#125;;</span><br><span class="line">        int in[]  = &#123;4,7,2,1,8,5,9,3,6&#125;;</span><br><span class="line">        TreeNode tree = reConstructBinaryTree(pre, in);</span><br><span class="line">        System.out.print(&quot;先序遍历结果:  &#123;&quot;);</span><br><span class="line">        preTraverseBinTree(tree);</span><br><span class="line">        System.out.println(&quot;&#125;&quot;);</span><br><span class="line">        System.out.print(&quot;中序遍历结果:  &#123;&quot;);</span><br><span class="line">        inTraverseBinTree(tree);</span><br><span class="line">        System.out.println(&quot;&#125;&quot;);</span><br><span class="line">        System.out.print(&quot;后序遍历结果:  &#123;&quot;);</span><br><span class="line">        postTraverseBinTree(tree);</span><br><span class="line">        System.out.println(&quot;&#125;&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。 时间限制：1秒  空间限制：32768K
    
    </summary>
    
    
      <category term="Java" scheme="http://ericli.top/tags/Java/"/>
    
      <category term="code" scheme="http://ericli.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu shadowsocks 服务器搭建</title>
    <link href="http://ericli.top/2017/10/20/Ubuntu%20shadowsocks%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/"/>
    <id>http://ericli.top/2017/10/20/Ubuntu shadowsocks 服务器搭建/</id>
    <published>2017-10-19T16:00:00.000Z</published>
    <updated>2018-01-21T13:06:55.004Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、一键安装脚本"><a href="#一、一键安装脚本" class="headerlink" title="一、一键安装脚本"></a>一、一键安装脚本</h2><p><a href="https://teddysun.com/" target="_blank" rel="noopener">https://teddysun.com/</a>   提供了一键安装脚本</p><p><strong>使用方式：</strong><br>首先下载 shell 脚本，然后给执行权限，最后 sudo 执行脚本。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -O shadowsocks.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh</span><br><span class="line">chmod +x shadowsocks.sh</span><br><span class="line">sudo ./shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log</span><br></pre></td></tr></table></figure></p><p>此时根据系统提示输入信息安装即可。</p><p>等到出现以下提示即为安装成功。<br><img src="http://img.blog.csdn.net/20171020152108121?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGVpZmx5eQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><strong>卸载方式：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./shadowsocks.sh uninstall</span><br></pre></td></tr></table></figure><p>此时如果需要修改配置文件，新增用户等操作，参考“二、手动安装”。</p><h2 id="二、手动安装"><a href="#二、手动安装" class="headerlink" title="二、手动安装"></a>二、手动安装</h2><p>更新软件源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure></p><p>然后安装 PIP 环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python-pip</span><br></pre></td></tr></table></figure></p><p>安装 shadowsocks<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install shadowsocks</span><br></pre></td></tr></table></figure></p><p>创建配置文件  并填充内容（见配置文件示例）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/shadowsocks.json</span><br></pre></td></tr></table></figure></p><p>单用户配置文件示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;server&quot;:&quot;0.0.0.0&quot;,</span><br><span class="line">    &quot;server_port&quot;:your_server_port,</span><br><span class="line">    &quot;local_address&quot;:&quot;127.0.0.1&quot;,</span><br><span class="line">    &quot;local_port&quot;:1080,</span><br><span class="line">    &quot;password&quot;:&quot;your_password&quot;,</span><br><span class="line">    &quot;timeout&quot;:300,</span><br><span class="line">    &quot;method&quot;:&quot;your_encryption_method&quot;,</span><br><span class="line">    &quot;fast_open&quot;: false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>多用户多端口配置文件示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;server&quot;:&quot;0.0.0.0&quot;,</span><br><span class="line">    &quot;local_address&quot;:&quot;127.0.0.1&quot;,</span><br><span class="line">    &quot;local_port&quot;:1080,</span><br><span class="line">    &quot;port_password&quot;:&#123;</span><br><span class="line">         &quot;8989&quot;:&quot;password0&quot;,</span><br><span class="line">         &quot;9001&quot;:&quot;password1&quot;,</span><br><span class="line">         &quot;9002&quot;:&quot;password2&quot;,</span><br><span class="line">         &quot;9003&quot;:&quot;password3&quot;,</span><br><span class="line">         &quot;9004&quot;:&quot;password4&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;timeout&quot;:300,</span><br><span class="line">    &quot;method&quot;:&quot;your_encryption_method&quot;,</span><br><span class="line">    &quot;fast_open&quot;: false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>创建完毕后，赋予文件权限：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 755 /etc/shadowsocks.json</span><br></pre></td></tr></table></figure></p><p>为了支持这些加密方式，你要需要安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt–get install python–m2crypto</span><br></pre></td></tr></table></figure><p>然后使用配置文件在后台运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ssserver -c /etc/shadowsocks.json -d start</span><br></pre></td></tr></table></figure><p>至此，配置完毕，Enjoy it.</p><hr><p>如果需要配置开机自启，则执行以下操作:</p><p>编辑 /etc/rc.local 文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/rc.local</span><br></pre></td></tr></table></figure></p><p>在 exit 0 这一行的上边加入如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/bin/ssserver –c /etc/shadowsocks.json</span><br></pre></td></tr></table></figure><h2 id="三、启动关闭指令"><a href="#三、启动关闭指令" class="headerlink" title="三、启动关闭指令"></a>三、启动关闭指令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/shadowsocks stop</span><br><span class="line">sudo /etc/init.d/shadowsocks start</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      本文记录了作者在 Ubuntu 搭建 shadowsocks 服务器的过程。
    
    </summary>
    
    
      <category term="network" scheme="http://ericli.top/tags/network/"/>
    
      <category term="Linux" scheme="http://ericli.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>如何判断网站是否使用了HTTP2</title>
    <link href="http://ericli.top/2017/10/20/%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E7%BD%91%E7%AB%99%E6%98%AF%E5%90%A6%E4%BD%BF%E7%94%A8%E4%BA%86HTTP2/"/>
    <id>http://ericli.top/2017/10/20/如何判断网站是否使用了HTTP2/</id>
    <published>2017-10-19T16:00:00.000Z</published>
    <updated>2018-01-21T13:06:55.001Z</updated>
    
    <content type="html"><![CDATA[<p>使用 chrome 打开网站，打开 console。</p><p>输入<code>window.chrome.loadTimes()</code> ，执行</p><p> <code>google.com</code>采用了 HTTP/2 结果输出为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">commitLoadTime</span><br><span class="line">:</span><br><span class="line">1508489268.11</span><br><span class="line">connectionInfo</span><br><span class="line">:</span><br><span class="line">&quot;h2&quot;</span><br><span class="line">finishDocumentLoadTime</span><br><span class="line">:</span><br><span class="line">1508489278.826</span><br><span class="line">finishLoadTime</span><br><span class="line">:</span><br><span class="line">1508489278.84</span><br><span class="line">firstPaintAfterLoadTime</span><br><span class="line">:</span><br><span class="line">0</span><br><span class="line">firstPaintTime</span><br><span class="line">:</span><br><span class="line">1508489282.901</span><br><span class="line">navigationType</span><br><span class="line">:</span><br><span class="line">&quot;Other&quot;</span><br><span class="line">npnNegotiatedProtocol</span><br><span class="line">:</span><br><span class="line">&quot;h2&quot;</span><br><span class="line">requestTime</span><br><span class="line">:</span><br><span class="line">1508489265.936</span><br><span class="line">startLoadTime</span><br><span class="line">:</span><br><span class="line">1508489265.936</span><br><span class="line">wasAlternateProtocolAvailable</span><br><span class="line">:</span><br><span class="line">false</span><br><span class="line">wasFetchedViaSpdy</span><br><span class="line">:</span><br><span class="line">true</span><br><span class="line">wasNpnNegotiated</span><br><span class="line">:</span><br><span class="line">true</span><br></pre></td></tr></table></figure><p>如图<br><img src="http://img.blog.csdn.net/20171020165049487?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGVpZmx5eQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>则表示采用了 HTTP/2 ,.</p><hr><p>反之，<code>baidu.com</code> 没有采用 HTTP/2，则如图</p><p><img src="http://img.blog.csdn.net/20171020165251464?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGVpZmx5eQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>]]></content>
    
    <summary type="html">
    
      本文记录了判断网站是否使用了HTTP2的方法。
    
    </summary>
    
    
      <category term="network" scheme="http://ericli.top/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>nginx 502 解决记录（php-fpm 启动失败）</title>
    <link href="http://ericli.top/2017/08/30/nginx%20502%20%E8%A7%A3%E5%86%B3%E8%AE%B0%E5%BD%95%EF%BC%88php-fpm%20%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5%EF%BC%89/"/>
    <id>http://ericli.top/2017/08/30/nginx 502 解决记录（php-fpm 启动失败）/</id>
    <published>2017-08-29T16:00:00.000Z</published>
    <updated>2018-01-20T18:42:52.505Z</updated>
    
    <content type="html"><![CDATA[<p>安装 <code>macOS 10.13</code> 之后发现 <code>nginx</code> 产生了 <code>502 错误</code>，具体解决方式记录如下：</p><h3 id="打开-nginx-error-log"><a href="#打开-nginx-error-log" class="headerlink" title="打开 nginx error log"></a>打开 <code>nginx error log</code></h3><blockquote><p>注：<br>此处 nginx 使用的是 brew 安装的 nginx ，使用其他工具或不同时间安装的 nginx ，在查看 nginx error log 时具体操作可能不同。</p></blockquote><p>我的<code>nginx</code>默认并没有打开 <code>error log</code>，编辑 <code>nginx.conf</code>，打开<code>error log</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error_log  logs/error.log;</span><br></pre></td></tr></table></figure><p>此时，运行一下<code>sudo nginx</code> 会在<code>/usr/local/Cellar/nginx/1.12.0_1/logs</code> 下产生<code>error.log</code>  文件，</p><p>打开 error log 发现错误信息如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[error] 1676#0: *1 kevent() reported that connect() failed (61: Connection refused) while connecting to upstream, client: 127.0.0.1, server: www, request: &quot;GET / HTTP/1.1&quot;, upstream: &quot;fastcgi://127.0.0.1:9000&quot;, host: &quot;www&quot;</span><br></pre></td></tr></table></figure><h3 id="检查php-fpm"><a href="#检查php-fpm" class="headerlink" title="检查php-fpm"></a>检查<code>php-fpm</code></h3><p>运行<code>sudo php-fpm</code> 报错如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[30-Aug-2017 14:33:37] ERROR: failed to open configuration file &apos;/private/etc/php-fpm.conf&apos;: No such file or directory (2)</span><br><span class="line">[30-Aug-2017 14:33:37] ERROR: failed to load configuration file &apos;/private/etc/php-fpm.conf&apos;</span><br><span class="line">[30-Aug-2017 14:33:37] ERROR: FPM initialization failed</span><br></pre></td></tr></table></figure><h3 id="确定原因为php-fpm-配置文件丢失"><a href="#确定原因为php-fpm-配置文件丢失" class="headerlink" title="确定原因为php-fpm 配置文件丢失"></a>确定原因为<code>php-fpm</code> 配置文件丢失</h3><p>在<code>/private/etc/</code> 找到了<code>php-fpm</code> 的默认配置文件<code>/private/etc/php-fpm.comf.default</code> ；</p><p>复制，新建一份配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /private/etc/php-fpm.comf.default /private/etc/php-fpm.conf</span><br></pre></td></tr></table></figure><p>再次运行<code>sudo php-fpm</code> 报错如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/private/etc/php-fpm.conf</span><br><span class="line">[30-Aug-2017 15:19:50] WARNING: Nothing matches the include pattern &apos;/private/etc/php-fpm.d/*.conf&apos; from /private/etc/php-fpm.conf at line 125.</span><br><span class="line">[30-Aug-2017 15:19:50] ERROR: failed to open error_log (/usr/var/log/php-fpm.log): No such file or directory (2)</span><br><span class="line">[30-Aug-2017 15:19:50] ERROR: failed to post process the configuration</span><br><span class="line">[30-Aug-2017 15:19:50] ERROR: FPM initialization failed</span><br></pre></td></tr></table></figure><p>进入<code>/private/etc/php-fpm.d</code> ，复制新建一份配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /private/etc/php-fpm.d/www.conf.default /private/etc/php-fpm.d/www.conf</span><br></pre></td></tr></table></figure><p>修改 <code>php-fpm log</code> 默认保存位置</p><p>编辑<code>sudo vim /private/etc/php-fpm.conf</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error_log = /usr/local/var/log/php-fpm.log</span><br></pre></td></tr></table></figure><p>再次执行<code>sudo php-fpm</code>  ，无错误提示。</p><p>重新启动 <code>nginx</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -s stop</span><br><span class="line">sudo nginx</span><br></pre></td></tr></table></figure><p>发现<code>502错误</code> 已解决</p>]]></content>
    
    <summary type="html">
    
      本文记录了升级 macOS 10.13 之后遇到 nginx 502 问题的解决方案。
    
    </summary>
    
    
      <category term="macOS" scheme="http://ericli.top/tags/macOS/"/>
    
      <category term="PHP" scheme="http://ericli.top/tags/PHP/"/>
    
      <category term="nginx" scheme="http://ericli.top/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>mac使用 brew 安装php apache 及php nginx 记录</title>
    <link href="http://ericli.top/2017/07/10/mac%E4%BD%BF%E7%94%A8%20brew%20%E5%AE%89%E8%A3%85php%20apache%20%E5%8F%8Aphp%20nginx%20%E8%AE%B0%E5%BD%95/"/>
    <id>http://ericli.top/2017/07/10/mac使用 brew 安装php apache 及php nginx 记录/</id>
    <published>2017-07-09T16:00:00.000Z</published>
    <updated>2018-01-20T18:56:05.033Z</updated>
    
    <content type="html"><![CDATA[<h2 id="brew-安装php-apache-bug"><a href="#brew-安装php-apache-bug" class="headerlink" title="brew 安装php  apache bug"></a>brew 安装php  apache bug</h2><p>不管是 <code>PHP 5</code> 还是 <code>PHP7</code> 都会丢失<code>libphp5.so</code> 或者<code>libphp7.so</code> 导致无法使用。</p><p><strong>解决方案</strong></p><ul><li>有人给作者的 Github 提了 issue ，解决方案见<a href="https://github.com/Homebrew/homebrew-php/issues/3601" target="_blank" rel="noopener">https://github.com/Homebrew/homebrew-php/issues/3601</a></li><li>stack overflow 也有相关讨论<a href="https://stackoverflow.com/questions/38855651/php7-on-macos-sierra-beta-fails-to-install" target="_blank" rel="noopener">https://stackoverflow.com/questions/38855651/php7-on-macos-sierra-beta-fails-to-install</a></li></ul><h2 id="brew-安装-php-nginx-bug"><a href="#brew-安装-php-nginx-bug" class="headerlink" title="brew 安装 php nginx bug"></a>brew 安装 php nginx bug</h2><p>默认的 <code>nginx.conf</code> 配置得有一些问题。</p><p><code>nginx.conf</code> 所在路径 <code>/usr/local/etc/nginx/nginx.conf</code> </p><p>此配置文件中只涉及到默认的 php 路径，如果配置了 vhost ，该配置就不起作用了附上我的配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#user  nobody;</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">#error_log  logs/error.log;</span><br><span class="line">#error_log  logs/error.log  notice;</span><br><span class="line">#error_log  logs/error.log  info;</span><br><span class="line"></span><br><span class="line">#pid        logs/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    #log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">    #                  &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">    #                  &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line"></span><br><span class="line">    #access_log  logs/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index index.php index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">        # redirect server error pages to the static page /50x.html</span><br><span class="line">        #</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    proxy_pass   http://127.0.0.1;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">        #</span><br><span class="line">        location ~ \.php$ &#123;</span><br><span class="line">   fastcgi_intercept_errors on;</span><br><span class="line">            root           html;</span><br><span class="line">            fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">            fastcgi_index  index.php;</span><br><span class="line">            fastcgi_param  SCRIPT_FILENAME  /usr/local/Cellar/nginx/1.12.0_1/html$fastcgi_script_name;</span><br><span class="line">            include        /usr/local/etc/nginx/fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        # deny access to .htaccess files, if Apache&apos;s document root</span><br><span class="line">        # concurs with nginx&apos;s one</span><br><span class="line">        #</span><br><span class="line">        #location ~ /\.ht &#123;</span><br><span class="line">        #    deny  all;</span><br><span class="line">        #&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    include servers/*;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我的 vhost 配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">server_name cgadmin.com;</span><br><span class="line">listen 80 ;</span><br><span class="line">       root  /Users/leif/www/cgadmin/public;</span><br><span class="line">       index index.html index.htm index.php;</span><br><span class="line">location ~ .php$ &#123;</span><br><span class="line">       fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">       fastcgi_index index.php;</span><br><span class="line">       //这一句配置的是项目目录地址</span><br><span class="line">       fastcgi_param SCRIPT_FILENAME   /Users/leif/www/cgadmin/public$fastcgi_script_name;</span><br><span class="line">       include fastcgi_params;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      本文记录了笔者在使用 brew 安装 apache 和 nginx 时遇到的一些问题的解决方案。
    
    </summary>
    
    
      <category term="macOS" scheme="http://ericli.top/tags/macOS/"/>
    
      <category term="PHP" scheme="http://ericli.top/tags/PHP/"/>
    
      <category term="Apache" scheme="http://ericli.top/tags/Apache/"/>
    
      <category term="brew" scheme="http://ericli.top/tags/brew/"/>
    
      <category term="nginx" scheme="http://ericli.top/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Tips of macOS</title>
    <link href="http://ericli.top/2017/06/14/Tips%20of%20macOS/"/>
    <id>http://ericli.top/2017/06/14/Tips of macOS/</id>
    <published>2017-06-13T16:00:00.000Z</published>
    <updated>2018-01-20T18:56:17.965Z</updated>
    
    <content type="html"><![CDATA[<h1 id="字体美化（华文黑体删除）"><a href="#字体美化（华文黑体删除）" class="headerlink" title="字体美化（华文黑体删除）"></a>字体美化（华文黑体删除）</h1><blockquote><p>本章节参考了孫志貴的一篇博文<br>链接：<a href="http://www.jianshu.com/p/fa5515f09299" target="_blank" rel="noopener">http://www.jianshu.com/p/fa5515f09299</a></p></blockquote><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>1.很多第三方应用打开时会提示下载“华文黑体”，然而在 macOS10.13 中却总是下载失败；<br>2.macOS 中有很多字体在一些地方的显示效果会透露着一股农业重金属的感觉。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>在恢复模式的终端运行一个 shell , 删除相关字体。</p><h3 id="创建-shell-脚本a-sh"><a href="#创建-shell-脚本a-sh" class="headerlink" title="创建 shell 脚本a.sh"></a>创建 shell 脚本<code>a.sh</code></h3><p>在<code>/Volumes/Macintosh HD</code> 新建一个 shell 文件，内容在下面两个中选择一个。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">只删除华文黑体</span><br><span class="line"></span><br><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">cd &quot;System&quot;</span><br><span class="line"></span><br><span class="line">find . -name &quot;STHeiti*&quot; -type f -delete</span><br><span class="line">find . -name &quot;华文*黑*&quot; -type f -delete</span><br><span class="line">find . -name &quot;STXihei*&quot; -type f -delete</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">删除所有不美观字体</span><br><span class="line"></span><br><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">cd &quot;System&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">find . -name &quot;STHeiti*&quot; -type f -delete</span><br><span class="line">find . -name &quot;华文*黑*&quot; -type f -delete</span><br><span class="line">find . -name &quot;STXihei*&quot; -type f -delete</span><br><span class="line">find . -name &quot;Hei.ttf*&quot; -type f -delete</span><br><span class="line">find . -name &quot;SIL-Hei-Med-Jian.fontinfo&quot; -type f -delete</span><br><span class="line">find . -name &quot;儷黑 Pro.ttf*&quot; -type f -delete</span><br><span class="line">find . -name &quot;LiHeiPro.fontinfo&quot; -type f -delete</span><br><span class="line">find . -name &quot;BiauKai.ttf*&quot; -type f -delete</span><br><span class="line">find . -name &quot;DFKaiShu-SB-Estd-BF.fontinfo&quot; -type f -delete</span><br></pre></td></tr></table></figure><h3 id="运行-shell-脚本"><a href="#运行-shell-脚本" class="headerlink" title="运行 shell 脚本"></a>运行 shell 脚本</h3><ol><li>重启的时候按 cmd + R 进入恢复模式</li><li>进入终端切换到相应目录，执行<code>bash a.sh</code></li></ol><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>如果是删除全部不美观字体，那么耗时会比较长，我用了大概将近20分钟吧，要耐心等待，等他运行完再重启。</p><h1 id="调整Launchpad行列数目"><a href="#调整Launchpad行列数目" class="headerlink" title="调整Launchpad行列数目"></a>调整Launchpad行列数目</h1><h2 id="流程："><a href="#流程：" class="headerlink" title="流程："></a>流程：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 改变行数：</span><br><span class="line">defaults write com.apple.dock springboard-rows -int X</span><br><span class="line"></span><br><span class="line">// 改变列数：</span><br><span class="line">defaults write com.apple.dock springboard-columns -int X</span><br><span class="line"></span><br><span class="line">//改变生效：</span><br><span class="line">killall Dock</span><br><span class="line"></span><br><span class="line">其中X是大于0的整数。根据自己喜好调整即可。</span><br></pre></td></tr></table></figure><p>恢复默认：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.dock springboard-rows Default</span><br><span class="line">defaults write com.apple.dock springboard-columns Default</span><br><span class="line">killall Dock</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      本文记录了一些 macOS 的一些 tips 。
    
    </summary>
    
    
      <category term="macOS" scheme="http://ericli.top/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>ThinkPHP5.0部署于Linux中白屏或500错误解决方案</title>
    <link href="http://ericli.top/2017/03/29/ThinkPHP5.0%E9%83%A8%E7%BD%B2%E4%BA%8ELinux%E4%B8%AD%E7%99%BD%E5%B1%8F%E6%88%96500%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://ericli.top/2017/03/29/ThinkPHP5.0部署于Linux中白屏或500错误解决方案/</id>
    <published>2017-03-29T04:58:00.000Z</published>
    <updated>2018-01-21T12:57:27.229Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h2><blockquote><p>部分 Linux 主机设置了 open_basedir（可将用户访问文件的活动范围限制在指定的区域，通常是入口文件根目录的路径） 选项，导致 ThinkPHP5 访问白屏或者报错。</p></blockquote><p>Safari 直接白屏，而 Chrome 报告了500错误，错误信息如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">The www.xx.xom page isn’t working</span><br><span class="line"></span><br><span class="line">www.xx.com is currently unable to handle this request.</span><br><span class="line">HTTP ERROR 500</span><br></pre></td></tr></table></figure><h2 id="问题诊断"><a href="#问题诊断" class="headerlink" title="问题诊断"></a>问题诊断</h2><p><code>ThinkPHP5.0</code> 官方手册称:</p><blockquote><p>如果把ThinkPHP5部署在了LAMP/LNMP环境上很有可能出现白屏的情况，这个时候需要开启 php 错误提示来判断是否是因为设置了open_basedir选项出错。</p></blockquote><h3 id="开启错误提示："><a href="#开启错误提示：" class="headerlink" title="开启错误提示："></a>开启错误提示：</h3><p>打开 <code>php.ini</code> 搜索 <code>display_errors</code>，把 <code>Off</code> 修改为 <code>On</code>就开启了 <code>php 错误提示</code> 。</p><p><em>lnmp 的 php.ini 位置在<code>/usr/local/php/etc/php.ini</code></em></p><p>注意，要修改的是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">display_errors = Off</span><br><span class="line">//修改为↓↓↓↓↓↓↓</span><br><span class="line">display_errors = On</span><br></pre></td></tr></table></figure><p>而不是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">; display_errors</span><br><span class="line">;   Default Value: On</span><br><span class="line">;   Development Value: On</span><br><span class="line">;   Production Value: Off</span><br></pre></td></tr></table></figure></p><p>这时再访问之前白屏的页面就会出现错误信息。如果错误信息如下那么很有可能就是因为<code>open_basedir</code>的问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">arning: require(): open_basedir restriction in effect. File(/home/wwwroot/xx/thinkphp/start.php) is not within the allowed path(s): (/home/wwwroot/xx/public:/tmp/:/var/tmp/:/proc/) in /home/wwwroot/xx/public/index.php on line 17</span><br><span class="line"></span><br><span class="line">Warning: require(/home/wwwroot/xx/thinkphp/start.php): failed to open stream: Operation not permitted in /home/wwwroot/xx/public/index.php on line 17</span><br><span class="line"></span><br><span class="line">Fatal error: require(): Failed opening required &apos;/home/wwwroot/xx/public/../thinkphp/start.php&apos; (include_path=&apos;.:/usr/local/php/lib/php&apos;) in /home/wwwroot/xx/public/index.php on line 17</span><br></pre></td></tr></table></figure><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="首先尝试通过修改-php-ini解决"><a href="#首先尝试通过修改-php-ini解决" class="headerlink" title="首先尝试通过修改 php.ini解决"></a>首先尝试通过修改 php.ini解决</h3><p>把权限作用域由入口文件目录修改为框架根目录<br>打开 <code>php.ini</code> 搜索 <code>open_basedir</code>,把</p><p><code>open_basedir = &quot;/home/wwwroot/xx/public/:/tmp/:/var/tmp/:/proc/&quot;</code><br>修改为</p><p><code>open_basedir = &quot;/home/wwwroot/xx/:/tmp/:/var/tmp/:/proc/&quot;</code><br>如果你的 <code>php.ini</code> 文件的 <code>open_basedir</code> 设置选项是被注释的或者为 <code>none</code>，那么你需要通过 <code>Apache</code> 或者 <code>Nginx</code> 来修改。</p><blockquote><p>此处我的 <code>lamp1.3</code> 中<code>php.ini</code> 文件的 <code>open_basedir</code> 设置选项是被注释且为 <code>none</code>。<br>所以采用以下方案解决↓↓↓↓↓↓↓↓↓↓</p></blockquote><h3 id="LAMP（Apache）修改方案"><a href="#LAMP（Apache）修改方案" class="headerlink" title="LAMP（Apache）修改方案"></a>LAMP（Apache）修改方案</h3><p><code>Apache</code>需要修改 <code>httpd.conf</code> 或者同目录下的 <code>vhost</code> 目录下 <code>xx.conf</code> 文件，如果你的生成环境是 <code>LAMP一键安装包</code>配置,那么多半就是直接修改 <code>你的域名.conf</code> 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apache</span><br><span class="line">├─vhost</span><br><span class="line">    ├─www.thinkphp.cn.conf</span><br><span class="line">    ├─......</span><br><span class="line">├─httpd.conf</span><br></pre></td></tr></table></figure><p>打开 <code>你的域名.conf</code>文件 搜索 <code>open_basedir</code>,把</p><p><code>php_admin_value open_basedir &quot;/home/wwwroot/www.thinkphp.cn/public/:/tmp/:/var/tmp/:/proc/&quot;</code><br>修改为</p><p><code>php_admin_value open_basedir &quot;/home/wwwroot/www.thinkphp.cn/:/tmp/:/var/tmp/:/proc/&quot;</code><br>然后重新启动 <code>apache</code> 即可生效</p><blockquote><p>域名.conf 文件通常是在 /usr/local/apache/conf 目录中，当然了这取决于你 <code>LAMP</code> 环境配置</p></blockquote><h3 id="LNMP-Nginx-Tengine-修改方法"><a href="#LNMP-Nginx-Tengine-修改方法" class="headerlink" title="LNMP(Nginx/Tengine) 修改方法"></a>LNMP(Nginx/Tengine) 修改方法</h3><p><code>Nginx</code> 需要修改 <code>nginx.conf</code> 或者 <code>conf/vhost</code> 目录下 <code>你的域名.conf</code> 文件，如果你的生成环境是 <code>LNMP/LTMP 一键安装包</code>配置那么多半就是直接修改 <code>你的域名.conf</code> 文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">nginx</span><br><span class="line">├─conf</span><br><span class="line">    ├─vhost</span><br><span class="line">        ├─www.thinkphp.cn.conf</span><br><span class="line">    ├─nginx.conf</span><br><span class="line">    ├─......</span><br><span class="line">├─nginx.conf</span><br></pre></td></tr></table></figure></p><p>打开 <code>你的域名.conf</code> 文件 搜索 <code>open_basedir</code>,把</p><p><code>fastcgi_param  PHP_VALUE  &quot;open_basedir=/home/wwwroot/www.thinkphp.cn/public/:/tmp/:/proc/&quot;;</code><br>修改为</p><p><code>fastcgi_param  PHP_VALUE  &quot;open_basedir=/home/wwwroot/www.thinkphp.cn/:/tmp/:/proc/&quot;;</code><br>然后重新启动 <code>Nginx</code> 即可生效</p><blockquote><p>域名.conf 文件通常是在 /usr/local/nginx/conf/vhost 目录中，当然了这取决于你 LNMP/LTMP 环境配置</p><h3 id="fpm-fastcgi-user-ini-修改方法"><a href="#fpm-fastcgi-user-ini-修改方法" class="headerlink" title="fpm/fastcgi user.ini 修改方法"></a>fpm/fastcgi user.ini 修改方法</h3></blockquote><p>打开 项目根目录下找到 <code>user.ini</code> 文件，搜索 <code>open_basedir</code>,把</p><p><code>open_basedir=/home/wwwroot/www.thinkphp.cn/public/:/tmp/:/proc/</code><br>修改为</p><p><code>open_basedir=/home/wwwroot/www.thinkphp.cn/:/tmp/:/proc/</code><br>然后重新启动 <code>web 服务器</code> 即可生效</p>]]></content>
    
    <summary type="html">
    
      部分 Linux 主机设置了 open_basedir（可将用户访问文件的活动范围限制在指定的区域，通常是入口文件根目录的路径） 选项，导致 ThinkPHP5 访问白屏或者报错。本文记录了作者解决该问题的过程。
    
    </summary>
    
    
      <category term="Linux" scheme="http://ericli.top/tags/Linux/"/>
    
      <category term="PHP" scheme="http://ericli.top/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>mac或linux批量转换文件编码</title>
    <link href="http://ericli.top/2016/12/15/mac%E6%88%96linux%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2%E6%96%87%E4%BB%B6%E7%BC%96%E7%A0%81/"/>
    <id>http://ericli.top/2016/12/15/mac或linux批量转换文件编码/</id>
    <published>2016-12-14T16:00:00.000Z</published>
    <updated>2018-01-21T12:57:27.159Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>坑*的 Android 老师，期末考试让我们在他给出的项目上继续写代码。。。然而，给出的项目中，java 代码部分用的是GB2312，其他地方用的都是 UTF-8，简直坑*。</p></blockquote><p>由于 Mac/Linux 自带一个 iconv ，可以转换文件编码，所以可以借用这个命令来进行文件编码的批量转换。</p><hr><p><strong>进入主题，，直接贴代码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">find *.$1 -exec sh -c &quot;iconv -f $2 -t $3 &#123;&#125; &gt; &#123;&#125;.temp&quot; \;</span><br><span class="line">find *.$1 -exec rm &#123;&#125; \;</span><br><span class="line">rename &apos;s/\.temp$//&apos; *.temp</span><br></pre></td></tr></table></figure><p><strong>注意：</strong><br>有些版本的 osx 是不自带 rename 的，比如我目前（2016年12月）使用的osx10.12.2，需要自己安装rename 才可以使用，安装方式很简单，使用<code>brew install rename</code> 安装就可以了。</p><p>或者可以使用这个版本的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">find *.$1 -exec sh -c &quot;iconv -f $2 -t $3 &#123;&#125; &gt; &#123;&#125;.temp&quot; \;</span><br><span class="line">find *.$1 -exec rm &#123;&#125; \;</span><br><span class="line">for files in *.temp</span><br><span class="line">do</span><br><span class="line">     mv $files $&#123;files%.temp&#125;</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p><strong>使用方式：</strong></p><p>按顺序传入三个参数：<br>要转码的文件拓展名  源编码   目的编码<br>e.g.<br><code>alliconv.sh java gb2312 utf8</code></p><p><strong>ps：</strong><br>另外，macOS 上发现 <code>/usr/bin</code> ,<code>/usr/sbin</code> 目录不能写入，</p><p>此时可以：<br>1.新建一个运行目录<br>2.关闭 rootless</p><p>新建运行目录就不说了，一般就直接用 <code>/usr/local/bin</code><br>下面给出关闭 rootless 的操作方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//重启按住 Command+R，进入恢复模式，打开Terminal。</span><br><span class="line"></span><br><span class="line">csrutil disable</span><br></pre></td></tr></table></figure><p>修改好了之后还可以选择再次打开，打开的方式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//重启按住 Command+R，进入恢复模式，打开Terminal。</span><br><span class="line"></span><br><span class="line">csrutil enable</span><br></pre></td></tr></table></figure><p>以上代码在 osx10.12中测试通过，linux 待测试。</p>]]></content>
    
    <summary type="html">
    
      批量转换文件编码 shell 脚本。
    
    </summary>
    
    
      <category term="macOS" scheme="http://ericli.top/tags/macOS/"/>
    
      <category term="Linux" scheme="http://ericli.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>macOS 缺少 Freetype 终极解决方案</title>
    <link href="http://ericli.top/2016/11/03/macOS%E7%BC%BA%E5%B0%91Freetype%E7%BB%88%E6%9E%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://ericli.top/2016/11/03/macOS缺少Freetype终极解决方案/</id>
    <published>2016-11-02T16:00:00.000Z</published>
    <updated>2018-01-21T12:57:27.219Z</updated>
    
    <content type="html"><![CDATA[<p><code>macOS</code>自带<code>php</code>的<code>gd库</code>有些问题，当用到<code>imagettftext()</code> 和 <code>freetype</code> 相关功能时会出问题，我遇到的问题是：</p><p> 在使用<code>TinkPHP</code>的 <code>topthink/think-captcha</code> 时，验证码图片无法正常显示，<code>ThinkPHP</code>中<code>log</code> 信息为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[ 2017-12-28T16:38:06+08:00 ] 127.0.0.1 GET /captcha.html</span><br><span class="line">[ error ] [0]致命错误: Call to undefined function think\captcha\imagettftext()</span><br></pre></td></tr></table></figure><p>大致意思就是没有 <code>imagettftext()</code>这个函数，这是因为缺少 <code>php</code> 的 <code>gd库</code> 中的 <code>freetype</code> 模块。</p><p>网上的解决方案大致有这么几种：</p><ul><li>重新编译 php</li><li>用 brew 安装一个新的 php</li><li><a href="https://php-osx.liip.ch" target="_blank" rel="noopener">https://php-osx.liip.ch</a> 一句话脚本</li></ul><p>这三种方案都是可行的，而且方便程度逐个递增。<br>但是， Apple 在<code>macOS10.11</code>引入了「Rootless机制」，简单来说就是 root 用户也无法操作某些系统关键部位，例如 php 的目录 <code>/usr/bin</code>，<br>详见<a href="https://developer.apple.com/videos/play/wwdc2015/706/" target="_blank" rel="noopener">wwdc相关内容</a>。</p><p>因此，以上三种方式暂时行不通，他们无法修改 php的默认指向，解决方案有二：</p><ul><li>使用第三方集成环境，e.g. <code>mamp</code> / <code>xampp</code></li><li>关闭<code>Rootless机制</code>，然后自己配置环境</li></ul><p>第一种方式我没实操，但是据说<code>mamp</code>之类软件兼容性也不怎么样。。。<br>我采用了第二种方式，</p><p>关闭Rootless机制的方法为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//重启按住 Command+R，进入恢复模式，打开Terminal。</span><br><span class="line"></span><br><span class="line">csrutil disable</span><br></pre></td></tr></table></figure></p><p>修改好了之后还可以选择再次打开，打开的方式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//重启按住 Command+R，进入恢复模式，打开Terminal。</span><br><span class="line"></span><br><span class="line">csrutil enable</span><br></pre></td></tr></table></figure><p>好，现在你已经成功的把Rootless机制给关掉了，然后就可以从以下三种方式中选择一种了</p><ul><li>重新编译 php</li><li>用 brew 安装一个新的 php</li><li><a href="https://php-osx.liip.ch" target="_blank" rel="noopener">https://php-osx.liip.ch</a> 一句话脚本</li></ul><p>重新编译PHP，可以参考我的另一篇博客：</p><p>后两种我都试过，macOS 10.11 ~ macOS 10.13 都可以用，</p><p>不过 macOS 10.12 之后，使用<code>brew</code>安装<code>php</code>时，可能会遇到<code>brew</code>缺少权限的问题，解决方案参考我的另一篇博客：<br><a href="http://blog.ericli.top/2018/01/18/mac%20brew%20权限问题解决记录的副本%205/" target="_blank" rel="noopener">mac brew 权限问题解决记录</a></p><p>一句话脚本，放在了AWS，使用的时候最好科学上网。</p><p>EOF</p>]]></content>
    
    <summary type="html">
    
      使用 macOS 自带的 Apache 和 PHP 运行 ThinkPHP 时，发现验证码模块无法正常使用。本文总结了多个该问题解决方案。
    
    </summary>
    
    
      <category term="macOS" scheme="http://ericli.top/tags/macOS/"/>
    
      <category term="PHP" scheme="http://ericli.top/tags/PHP/"/>
    
      <category term="Apache" scheme="http://ericli.top/tags/Apache/"/>
    
  </entry>
  
  <entry>
    <title>timestamp变成Xtamp的解决办法</title>
    <link href="http://ericli.top/2016/10/11/timestamp%E5%8F%98%E6%88%90Xtamp%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://ericli.top/2016/10/11/timestamp变成Xtamp的解决办法/</id>
    <published>2016-10-10T16:00:00.000Z</published>
    <updated>2018-01-21T12:57:27.236Z</updated>
    
    <content type="html"><![CDATA[<p>在<code>php</code>发送<code>json</code>数据时，传了一个<code>timestamp</code>,数据可以正常发送，但是当用浏览器直接输出时，却变成了<code>Xtamp</code>，原因及解决办法如下：</p><hr><p><strong>原因:</strong></p><p><code>&amp;times</code>被解析，</p><p><strong>最简单的解决办法:</strong><br>将<code>timestamp</code>放到<code>json</code>数组的第一位，保证前边不会有&amp;就可以了。</p>]]></content>
    
    <summary type="html">
    
      本文记录了timestamp变成Xtamp的解决办法。
    
    </summary>
    
    
      <category term="PHP" scheme="http://ericli.top/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Oracle DBMS占用大量内存的解决方法</title>
    <link href="http://ericli.top/2016/09/15/Oracle%20DBMS%E5%8D%A0%E7%94%A8%E5%A4%A7%E9%87%8F%E5%86%85%E5%AD%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://ericli.top/2016/09/15/Oracle DBMS占用大量内存的解决方法/</id>
    <published>2016-09-14T16:00:00.000Z</published>
    <updated>2018-01-21T13:04:19.709Z</updated>
    
    <content type="html"><![CDATA[<p>本学期学习oracle数据库，还学习android开发，于是电脑上装了oracle 12，还装了android studio以及多个genymotion模拟器，然后开启了ssd的rapid模式（使用部分闲置内存作为ssd的快速缓冲区，硬盘速度简直炸裂，seq顺序读写的速度大概是hdd的30倍，4k随机速度达到了hdd的500倍。。。上图装逼，不服单劈），<img src="http://img.blog.csdn.net/20160911084330973" alt="这里写图片描述"><br>好，故事背景就写到这，下面进入主题，在我打开android studio或者phpstorm的时候，常出现内存90%占用，而且，，有时候开机内存直接占用60%，于是我打开了任务管理器，看看谁是内存大户，，结果发现。。。rapid，android studio居然都不是，，，oracle dbms居然占了我4个G的内存。。于是，杀意顿起。。。。。</p><p>好吧，。，，</p><p>这才是真正的主题，。，。</p><p>如果你发现你的oracle dbms占用大量内存。。。建议你给他做个限制</p><p>首先dba身份登录，用sqlplus就可以，</p><p>然后输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show parameter sga;     //显示最大分配内存</span><br></pre></td></tr></table></figure><p>在<code>sga_max_size</code> 下，你可以看到你当前的内存分配值，</p><p>如果觉得太大，</p><p>可以用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter system set sga_max_size=$size scope=spfile;</span><br></pre></td></tr></table></figure><p>修改内存占用大小，修改完了需要重启才能生效。</p><p>ps：附上用dba身份登录数据库的方法（win下）</p><p>方法1。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.打开cmd</span><br><span class="line">2.输入   sqlplus  / nolog 回车</span><br><span class="line">3.输入   connect  / as sysdba  回车</span><br></pre></td></tr></table></figure><p>方法2.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlplus sys/password as sysdba</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      本文记录了笔者曾经遇到的Oracle DBMS占用大量内存的解决方法。
    
    </summary>
    
    
      <category term="database" scheme="http://ericli.top/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>网易云信短信验证码验证PHP实现</title>
    <link href="http://ericli.top/2016/09/11/%E7%BD%91%E6%98%93%E4%BA%91%E4%BF%A1%E7%9F%AD%E4%BF%A1%E9%AA%8C%E8%AF%81%E7%A0%81%E9%AA%8C%E8%AF%81PHP%E5%AE%9E%E7%8E%B0/"/>
    <id>http://ericli.top/2016/09/11/网易云信短信验证码验证PHP实现/</id>
    <published>2016-09-10T16:00:00.000Z</published>
    <updated>2018-01-21T13:04:19.776Z</updated>
    
    <content type="html"><![CDATA[<p>网易云信5分一条，阿里大于4分5一条，但是网易云信自带验证系统，阿里大于需要自己指定验证码，自己做验证，但是，，，，阿里大于可以自己定义签名，而网易云信只能使用默认的【云短信】，而且阿里大于的短信模板审核很快，，，网易云信妈的，。，，审核了两天，这还是我联系了客服妹子，要不，，，好了。。。不黑网易了。。。接下来上代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line"> * Created by PhpStorm.</span><br><span class="line"> * User: EricLi</span><br><span class="line"> * Date: 2016/9/10</span><br><span class="line"> * Time: 9:20</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">//Auth 类，直接引入就行</span><br><span class="line"></span><br><span class="line">class Auth</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">//将你注册的 key和 secret 定义好。</span><br><span class="line"></span><br><span class="line">    const APP_KEY = &apos;your key&apos;;</span><br><span class="line">    const APP_SECRET = &apos;tour secret&apos;;</span><br><span class="line">//发送验证码函数，传入手机号即可</span><br><span class="line">    public function SendSmsCode($mobile = &quot;&quot;)&#123;</span><br><span class="line">        $appKey = self::APP_KEY;</span><br><span class="line">        $appSecret = self::APP_SECRET;</span><br><span class="line">        $nonce = &apos;100&apos;;</span><br><span class="line">        $curTime = time();</span><br><span class="line">        $checkSum = sha1($appSecret . $nonce . $curTime);</span><br><span class="line">        $data  = array(</span><br><span class="line">            &apos;mobile&apos;=&gt; $mobile,</span><br><span class="line">        );</span><br><span class="line">        $data = http_build_query($data);</span><br><span class="line">        $opts = array (</span><br><span class="line">            &apos;http&apos; =&gt; array(</span><br><span class="line">                &apos;method&apos; =&gt; &apos;POST&apos;,</span><br><span class="line">                &apos;header&apos; =&gt; array(</span><br><span class="line">                    &apos;Content-Type:application/x-www-form-urlencoded;charset=utf-8&apos;,</span><br><span class="line">                    &quot;AppKey:$appKey&quot;,</span><br><span class="line">                    &quot;Nonce:$nonce&quot;,</span><br><span class="line">                    &quot;CurTime:$curTime&quot;,</span><br><span class="line">                    &quot;CheckSum:$checkSum&quot;</span><br><span class="line">                ),</span><br><span class="line">                &apos;content&apos; =&gt;  $data</span><br><span class="line">            ),</span><br><span class="line">        );</span><br><span class="line">        $context = stream_context_create($opts);</span><br><span class="line">        $html = file_get_contents(&quot;https://api.netease.im/sms/sendcode.action&quot;, false, $context);</span><br><span class="line">        echo $html;</span><br><span class="line">    &#125;</span><br><span class="line">//验证码校验函数，传入手机号，以及该手机号反馈给你的验证码，</span><br><span class="line">    public function CheckSmsYzm($mobile = &quot;&quot;,$Code=&quot;&quot;)&#123;</span><br><span class="line">        $appKey = self::APP_KEY;</span><br><span class="line">        $appSecret = self::APP_SECRET;</span><br><span class="line">        $nonce = &apos;100&apos;;</span><br><span class="line">        $curTime = time();</span><br><span class="line">        $checkSum = sha1($appSecret . $nonce . $curTime);</span><br><span class="line">        $data  = array(</span><br><span class="line">            &apos;mobile&apos;=&gt; $mobile,</span><br><span class="line">            &apos;code&apos; =&gt; $Code,</span><br><span class="line">        );</span><br><span class="line">        $data = http_build_query($data);</span><br><span class="line">        $opts = array (</span><br><span class="line">            &apos;http&apos; =&gt; array(</span><br><span class="line">                &apos;method&apos; =&gt; &apos;POST&apos;,</span><br><span class="line">                &apos;header&apos; =&gt; array(</span><br><span class="line">                    &apos;Content-Type:application/x-www-form-urlencoded;charset=utf-8&apos;,</span><br><span class="line">                    &quot;AppKey:$appKey&quot;,</span><br><span class="line">                    &quot;Nonce:$nonce&quot;,</span><br><span class="line">                    &quot;CurTime:$curTime&quot;,</span><br><span class="line">                    &quot;CheckSum:$checkSum&quot;</span><br><span class="line">                ),</span><br><span class="line">                &apos;content&apos; =&gt;  $data</span><br><span class="line">            ),</span><br><span class="line">        );</span><br><span class="line">        $context = stream_context_create($opts);</span><br><span class="line">        $html = file_get_contents(&quot;https://api.netease.im/sms/verifycode.action&quot;, false, $context);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      本文给出了使用网易云信相关付费接口实现发送短信验证码的 PHP 实现方式
    
    </summary>
    
    
      <category term="code" scheme="http://ericli.top/tags/code/"/>
    
      <category term="PHP" scheme="http://ericli.top/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>DES算法Java模拟实现</title>
    <link href="http://ericli.top/2016/07/10/DES%E7%AE%97%E6%B3%95java%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0/"/>
    <id>http://ericli.top/2016/07/10/DES算法java模拟实现/</id>
    <published>2016-07-09T16:00:00.000Z</published>
    <updated>2018-01-21T13:00:42.482Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>大二下学期应用密码学课程设计</p></blockquote><h1 id="已同步github项目："><a href="#已同步github项目：" class="headerlink" title="已同步github项目："></a>已同步github项目：</h1><p>url:<a href="https://github.com/EricLi404/Java-Demos/tree/master/Des-Demo" target="_blank" rel="noopener">https://github.com/EricLi404/Java-Demos/tree/master/Des-Demo</a></p><p>git:<a href="https://github.com/EricLi404/Java-Demos.git" target="_blank" rel="noopener">https://github.com/EricLi404/Java-Demos.git</a></p><p>实现了des算法，具体的每一步的输出都有记录，没有加入工作模式，支持加密的输入为英文和数字混合的字符串，填充方式采用的无限填充0的做法。下面是源码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">// 主类，含有一些调试信息，各种输出</span><br><span class="line"></span><br><span class="line">package cryptology;</span><br><span class="line"></span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by leif on 2016/3/26 0026.</span><br><span class="line"> */</span><br><span class="line">public class des &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">        System.out.println(&quot;**********************************************************&quot;);</span><br><span class="line">        System.out.println(&quot;                      DES加解密分步演示                      &quot;);</span><br><span class="line">        System.out.println(&quot;**********************************************************&quot;);</span><br><span class="line">        System.out.println();</span><br><span class="line">        @SuppressWarnings(&quot;resource&quot;)</span><br><span class="line">Scanner in = new Scanner(System.in);</span><br><span class="line">        System.out.print(&quot;请输入明文(支持任意长度字母数字组合)：&quot;);</span><br><span class="line">        String mmmmmm = in.nextLine();</span><br><span class="line">        System.out.print(&quot;请输入密钥(支持任意格式输入)：&quot;);</span><br><span class="line">        String kkkkkk = in.nextLine();</span><br><span class="line">        String[] M = util.all2string(mmmmmm);</span><br><span class="line">        char[] K = util.keypre(kkkkkk);</span><br><span class="line">        descore descore = new descore();</span><br><span class="line">        String mimi = descore.en(M, K);</span><br><span class="line">        String demimi = descore.de(util.all222string(mimi), K);</span><br><span class="line">        String demimistring = util.byte2string(demimi);</span><br><span class="line">        System.out.println(&quot;*************************************************&quot;);</span><br><span class="line">        System.out.println(&quot;**********************结果***********************&quot;);</span><br><span class="line">        System.out.println(&quot;明文：&quot;+mmmmmm);</span><br><span class="line">        System.out.println(&quot;------------------------------------------------------------&quot;);</span><br><span class="line">        System.out.println(&quot;加密结果：&quot;);</span><br><span class="line">        System.out.println(&quot;二进制：&quot;+ mimi);</span><br><span class="line">        System.out.println(&quot;十六进制：&quot;+util.two2hex(mimi));</span><br><span class="line">        System.out.println(&quot;------------------------------------------------------------&quot;);</span><br><span class="line">        System.out.println(&quot;解密结果：&quot;);</span><br><span class="line">        System.out.println(&quot;二进制：&quot;+demimi);</span><br><span class="line">        System.out.println(&quot;十六进制：&quot;+util.two2hex(demimi));</span><br><span class="line">        System.out.println(&quot;编码后：&quot;+demimistring);</span><br><span class="line">            </span><br><span class="line">        </span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br></pre></td><td class="code"><pre><span class="line">// 核心算法类</span><br><span class="line">package cryptology;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by leif on 2016/3/26 0026.</span><br><span class="line"> */</span><br><span class="line">public class descore &#123;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 初始置換</span><br><span class="line">     * @param M char[64]</span><br><span class="line">     * @return char[56]</span><br><span class="line">     */</span><br><span class="line">    private char[] initReplace(char[] M)&#123;</span><br><span class="line">        char[] tM = new char[64];</span><br><span class="line">        for (int i = 0; i &lt; 64; i++)&#123;</span><br><span class="line">            tM[i] = M[data.IP[i]-1];</span><br><span class="line">        &#125;</span><br><span class="line">        return tM;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 密钥置换 1</span><br><span class="line">     * @param K char[64]</span><br><span class="line">     * @return char[56]</span><br><span class="line">     */</span><br><span class="line">    private char[] keyReplace1(char[] K)&#123;</span><br><span class="line">        char[] tK = new char[64];</span><br><span class="line">        for (int i = 0; i &lt; 56; i++)&#123;</span><br><span class="line">            tK[i] = K[data.PC_1[i]-1];</span><br><span class="line">        &#125;</span><br><span class="line">        return tK;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 生成子密钥</span><br><span class="line">     * @param K char[56]</span><br><span class="line">     * @param offset 左移位数 int</span><br><span class="line">     * @return char[56]</span><br><span class="line">     */</span><br><span class="line">    private char[] loopKey(char[] K, int offset)&#123;</span><br><span class="line">        String k1 = new String();</span><br><span class="line">        String k2 = new String();</span><br><span class="line">        String k = new String(K);</span><br><span class="line">        k1 = (k.substring(0,28)+k.substring(0,2)).substring(offset,offset+28);</span><br><span class="line">        k2 = (k.substring(28,56)+k.substring(28,30)).substring(offset,offset+28);</span><br><span class="line">        return (k1+k2).toCharArray();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     *  密钥置换2</span><br><span class="line">     * @param K char[56]</span><br><span class="line">     * @return char[48]</span><br><span class="line">     */</span><br><span class="line">    private char[] keyReplace2(char[] K)&#123;</span><br><span class="line">        char[] tK = new char[48];</span><br><span class="line">        for (int i = 0; i &lt; 48; i++)&#123;</span><br><span class="line">            tK[i] = K[data.PC_2[i]-1];</span><br><span class="line">        &#125;</span><br><span class="line">        return tK;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     *  生成16轮的轮密钥</span><br><span class="line">     * @param K char[64]</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    private char[][] getKey(char[] K)&#123;</span><br><span class="line">        char[][] tK = new char[16][48];</span><br><span class="line">        char[][] ttK = new char[16][48];</span><br><span class="line">        char[] k1 = new char[56];</span><br><span class="line">        k1 = keyReplace1(K);</span><br><span class="line">        tK[0] = loopKey(k1,data.LeftMove[0]);</span><br><span class="line">        for (int i = 1; i &lt; 16; i++)&#123;</span><br><span class="line">            tK[i] = loopKey(tK[i-1],data.LeftMove[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        for(int i = 0; i &lt; 16; i++)&#123;</span><br><span class="line">        ttK[i] = keyReplace2(tK[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        return ttK;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * E 表置换（拓展置换）</span><br><span class="line">     * @param R char[32]</span><br><span class="line">     * @return char[48]</span><br><span class="line">     */</span><br><span class="line">    private char[] eReplace(char[] R)&#123;</span><br><span class="line">        char[] tR = new char[48];</span><br><span class="line">        for (int i = 0;i &lt; 48; i++)&#123;</span><br><span class="line">            tR[i] = R[data.E[i]-1];</span><br><span class="line">        &#125;</span><br><span class="line">        return tR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     *  xor异或操作</span><br><span class="line">     * @param tR char[48]</span><br><span class="line">     * @param K char[48] 轮密钥</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    private char[] xor(char[] tR, char[] K)&#123;</span><br><span class="line">        String x = new String();</span><br><span class="line">        for (int i = 0; i &lt; tR.length; i++)&#123;</span><br><span class="line">            x += tR[i] ^ K[i];</span><br><span class="line">        &#125;</span><br><span class="line">        return x.toCharArray();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * s 盒置换</span><br><span class="line">     * @param xorR char[48]</span><br><span class="line">     * @return char[32]</span><br><span class="line">     */</span><br><span class="line">    private char[] sReplace(char[] xorR)&#123;</span><br><span class="line">        char[][] tR = new char[8][6];</span><br><span class="line">/*        String  nn = new String(R);</span><br><span class="line">        System.out.println(nn+nn.length());*/</span><br><span class="line">        String sr = new String();</span><br><span class="line">        for (int i = 0; i &lt; 8; i++)&#123;</span><br><span class="line">            for (int j = 0; j &lt; 6; j++)&#123;</span><br><span class="line">                tR[i][j] = xorR[i*6+j];</span><br><span class="line">            &#125;</span><br><span class="line">            int p = util.two2ten(String.valueOf(tR[i][0])+String.valueOf(tR[i][5]));</span><br><span class="line">            int q = util.two2ten(String.valueOf(tR[i][1])+String.valueOf(tR[i][2])+String.valueOf(tR[i][3])+String.valueOf(tR[i][4]));</span><br><span class="line">             sr += String.format(&quot;%04d&quot;,Integer.parseInt(Integer.toBinaryString(data.S_Box[i][p][q])));</span><br><span class="line">//            sr += String.format(&quot;%04d&quot;,Integer.parseInt(Integer.toBinaryString(data.S_Box[i][(tR[i][0] &lt;&lt; 1) + tR[i][5]][(tR[i][1] &lt;&lt; 3) + (tR[i][2] &lt;&lt; 2) + (tR[i][3] &lt;&lt; 1) + tR[i][4]])));</span><br><span class="line">        &#125;</span><br><span class="line">        return sr.toCharArray();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * p 表置换</span><br><span class="line">     * @param sR char[32]</span><br><span class="line">     * @return char[32]</span><br><span class="line">     */</span><br><span class="line">    private char[] pReplace(char[] sR)&#123;</span><br><span class="line">        char[] pR = new char[32];</span><br><span class="line">        for (int i = 0; i &lt; 32; i++)&#123;</span><br><span class="line">            pR[i] = sR[data.P[i]-1];</span><br><span class="line">        &#125;</span><br><span class="line">        return pR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     *  终结置换</span><br><span class="line">     * @param R char[64]</span><br><span class="line">     * @return char[64]</span><br><span class="line">     */</span><br><span class="line">    private char[] init_1Replace(char[] R)&#123;</span><br><span class="line">        char[] tR = new char[64];</span><br><span class="line">        for (int i = 0; i &lt; 64; i++)&#123;</span><br><span class="line">            tR[i] = R[data.IP_1[i]-1];</span><br><span class="line">        &#125;</span><br><span class="line">        return tR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     *  轮置换</span><br><span class="line">     * @param R char[32]</span><br><span class="line">     * @param K char[32]</span><br><span class="line">     * @return char[32]</span><br><span class="line">     */</span><br><span class="line">    public char[] core(char[] R, char[] K)&#123;</span><br><span class="line">        char[] eR = eReplace(R);</span><br><span class="line">        System.out.println(&quot;Etable置换结果---&quot;+new String(eR)+&quot;-----&quot;+util.two2hex(new String(eR)));</span><br><span class="line">        System.out.println(&quot;轮密钥---&quot;+new String(K)+&quot;-----&quot;+util.two2hex(new String(K)));</span><br><span class="line">        char[] xorR = xor(eR,K);</span><br><span class="line">        System.out.println(&quot;xor-1结果---&quot;+new String(xorR)+&quot;-----&quot;+util.two2hex(new String(xorR)));</span><br><span class="line">        char[] sR = sReplace(xorR);</span><br><span class="line">        System.out.println(&quot;Sbox置换结果---&quot;+new String(sR)+&quot;-----&quot;+util.two2hex(new String(sR)));</span><br><span class="line">        char[] pR = pReplace(sR);</span><br><span class="line">        System.out.println(&quot;Ptable置换结果---&quot;+new String(pR)+&quot;-----&quot;+util.two2hex(new String(pR)));</span><br><span class="line">        @SuppressWarnings(&quot;unused&quot;)</span><br><span class="line">String pp = new String(pR);</span><br><span class="line">        return pR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String enCode(char[] M, char[] K)&#123;</span><br><span class="line">    System.out.println(&quot;#########################&quot;);</span><br><span class="line">    System.out.println(&quot; =====  === == ==  = =   开始加密&quot;);</span><br><span class="line">    System.out.println(&quot;比特流为---&quot;+new String(M)+&quot;-----&quot;+util.two2hex(new String(M)));</span><br><span class="line">    System.out.println(&quot;密钥为---&quot;+new String(K)+&quot;-----&quot;+util.two2hex(new String(K)));</span><br><span class="line">        char[][] L = new char[17][32];</span><br><span class="line">        char[][] R = new char[17][32];</span><br><span class="line">        char[][] key = new char[16][48];</span><br><span class="line">        char[] res = new char[64];</span><br><span class="line">        char[] r = new char[64];</span><br><span class="line">        M = initReplace(M);</span><br><span class="line">        System.out.println(&quot;IP置换结果---&quot;+new String(M)+&quot;-----&quot;+util.two2hex(new String(M)));</span><br><span class="line">        key = getKey(K);</span><br><span class="line">        for (int i = 0; i &lt; 32; i++)&#123;</span><br><span class="line">            L[0][i] = M[i];</span><br><span class="line">            R[0][i] = M[i+32];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        for (int i = 1; i &lt; 17; i++)&#123;</span><br><span class="line">        System.out.println(&quot;===================第 &quot;+i+&quot; 轮==================&quot;);</span><br><span class="line">            char[] xorR = xor(L[i-1],core(R[i-1],key[i-1]));</span><br><span class="line">            System.out.println(&quot;xor-2结果&quot;+new String(xorR)+&quot;-----&quot;+util.two2hex(new String(xorR)));</span><br><span class="line">            for (int j = 0; j &lt; 32; j++)&#123;</span><br><span class="line">                L[i][j] = R[i-1][j];</span><br><span class="line">                R[i][j] = xorR[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        for (int i = 0; i &lt; 32; i++)&#123;</span><br><span class="line">            res[i] = R[16][i];</span><br><span class="line">            res[i+32] = L[16][i];</span><br><span class="line">        &#125;</span><br><span class="line">        r = init_1Replace(res);</span><br><span class="line">        String rr = new String(r);</span><br><span class="line">        System.out.println(&quot;终结置换结果---&quot;+new String(rr)+&quot;-----&quot;+util.two2hex(new String(rr)));</span><br><span class="line">        return rr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public String deCode(char[] M, char[] K)&#123;</span><br><span class="line">    System.out.println(&quot;#########################&quot;);</span><br><span class="line">    System.out.println(&quot; =====  === == ==  = =   开始解密&quot;);</span><br><span class="line">    System.out.println(&quot;比特流为---&quot;+new String(M)+&quot;-----&quot;+util.two2hex(new String(M)));</span><br><span class="line">    System.out.println(&quot;密钥为---&quot;+new String(K)+&quot;-----&quot;+util.two2hex(new String(K)));</span><br><span class="line">        char[][] L = new char[17][32];</span><br><span class="line">        char[][] R = new char[17][32];</span><br><span class="line">        char[][] key = new char[16][48];</span><br><span class="line">        char[] res = new char[64];</span><br><span class="line">        char[] r = new char[64];</span><br><span class="line">        M = initReplace(M);</span><br><span class="line">        System.out.println(&quot;IP置换结果---&quot;+new String(M)+&quot;-----&quot;+util.two2hex(new String(M)));</span><br><span class="line">        key = getKey(K);</span><br><span class="line">        for (int i = 0; i &lt; 32; i++)&#123;</span><br><span class="line">            L[0][i] = M[i];</span><br><span class="line">            R[0][i] = M[i+32];</span><br><span class="line">        &#125;</span><br><span class="line">        for (int i = 1; i &lt; 17; i++)&#123;</span><br><span class="line">        System.out.println(&quot;===================第 &quot;+i+&quot; 轮==================&quot;);</span><br><span class="line">            char[] xorR = xor(L[i-1],core(R[i-1],key[16-i]));</span><br><span class="line">            System.out.println(&quot;xor-2结果&quot;+new String(xorR)+&quot;-----&quot;+util.two2hex(new String(xorR)));</span><br><span class="line">            for (int j = 0; j &lt; 32; j++)&#123;</span><br><span class="line">                L[i][j] = R[i-1][j];</span><br><span class="line">                R[i][j] = xorR[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        for (int i = 0; i &lt; 32; i++)&#123;</span><br><span class="line">            res[i] = R[16][i];</span><br><span class="line">            res[i+32] = L[16][i];</span><br><span class="line">        &#125;</span><br><span class="line">        r = init_1Replace(res);</span><br><span class="line">        String rr = new String(r);</span><br><span class="line">        return rr;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public String en(String[] mm, char[] kk) &#123;</span><br><span class="line">    String mi = &quot;&quot;;</span><br><span class="line">for(int i = 0; i &lt; mm.length; i++)&#123;</span><br><span class="line">char[] charrr = mm[i].toCharArray();</span><br><span class="line">mi += enCode(charrr, kk);</span><br><span class="line">&#125;</span><br><span class="line">return mi;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    public String de(String[] mm, char[] kk) &#123;</span><br><span class="line">    String mi = &quot;&quot;;</span><br><span class="line">for(int i = 0; i &lt; mm.length; i++)&#123;</span><br><span class="line">char[] charrr = mm[i].toCharArray();</span><br><span class="line">mi += deCode(charrr, kk);</span><br><span class="line">&#125;</span><br><span class="line">return mi;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">// des算法置换过程需要用到的一些置换表</span><br><span class="line"></span><br><span class="line">package cryptology;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by leif on 2016/3/26 0026.</span><br><span class="line"> */</span><br><span class="line">public class data &#123;</span><br><span class="line">        // 声明常量字节数组</span><br><span class="line">static int length = 0;</span><br><span class="line"></span><br><span class="line">    public static int getLength() &#123;</span><br><span class="line">return length;</span><br><span class="line">&#125;</span><br><span class="line">public static void setLength(int length) &#123;</span><br><span class="line">data.length = length;</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line">     * 初始置换</span><br><span class="line">     */</span><br><span class="line">    static final int[] IP = &#123;</span><br><span class="line">                58, 50, 42, 34, 26, 18, 10, 2, 60, 52, 44, 36, 28, 20, 12, 4, 62, 54,</span><br><span class="line">                46, 38, 30, 22, 14, 6, 64, 56, 48, 40, 32, 24, 16, 8, 57, 49, 41, 33,</span><br><span class="line">                25, 17, 9, 1, 59, 51, 43, 35, 27, 19, 11, 3, 61, 53, 45, 37, 29, 21,</span><br><span class="line">                13, 5, 63, 55, 47, 39, 31, 23, 15, 7</span><br><span class="line">        &#125;; // 64</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     *</span><br><span class="line">     */</span><br><span class="line">    static final int[] IP_1 = &#123;</span><br><span class="line">                40, 8, 48, 16, 56, 24, 64, 32, 39, 7, 47, 15, 55, 23, 63, 31, 38, 6,</span><br><span class="line">                46, 14, 54, 22, 62, 30, 37, 5, 45, 13, 53, 21, 61, 29, 36, 4, 44, 12,</span><br><span class="line">                52, 20, 60, 28, 35, 3, 43, 11, 51, 19, 59, 27, 34, 2, 42, 10, 50, 18,</span><br><span class="line">                58, 26, 33, 1, 41, 9, 49, 17, 57, 25</span><br><span class="line">        &#125;; // 64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 密钥置换  1</span><br><span class="line">     */</span><br><span class="line">    static final int[] PC_1 = &#123;</span><br><span class="line">                57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51,</span><br><span class="line">                43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7,</span><br><span class="line">                62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20,</span><br><span class="line">                12, 4</span><br><span class="line">        &#125;; // 56</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     *  密钥置换  2</span><br><span class="line">     */</span><br><span class="line">    static final int[] PC_2 = &#123;</span><br><span class="line">                14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16,</span><br><span class="line">                7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44,</span><br><span class="line">                49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32</span><br><span class="line">        &#125;; // 48</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     *  E表置换（将密钥的右32置换为48）</span><br><span class="line">     */</span><br><span class="line">    static final int[] E = &#123;</span><br><span class="line">                32, 1, 2, 3, 4, 5, 4, 5, 6, 7, 8, 9, 8, 9, 10, 11, 12, 13, 12, 13,</span><br><span class="line">                14, 15, 16, 17, 16, 17, 18, 19, 20, 21, 20, 21, 22, 23, 24, 25, 24,</span><br><span class="line">                25, 26, 27, 28, 29, 28, 29, 30, 31, 32, 1</span><br><span class="line">        &#125;; // 48</span><br><span class="line"></span><br><span class="line">        static final int[] P = &#123;</span><br><span class="line">                16, 7, 20, 21, 29, 12, 28, 17, 1, 15, 23, 26, 5, 18, 31, 10, 2, 8,</span><br><span class="line">                24, 14, 32, 27, 3, 9, 19, 13, 30, 6, 22, 11, 4, 25</span><br><span class="line">        &#125;; // 32</span><br><span class="line">        static final int[][][] S_Box = &#123;</span><br><span class="line">                &#123;</span><br><span class="line">                        &#123; 14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7 &#125;,</span><br><span class="line">                        &#123; 0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8 &#125;,</span><br><span class="line">                        &#123; 4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0 &#125;,</span><br><span class="line">                        &#123; 15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13 &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123; // S_Box[1]</span><br><span class="line">                        &#123; 15, 1, 8, 14, 6, 11, 3, 4, 9, 7, 2, 13, 12, 0, 5, 10 &#125;,</span><br><span class="line">                        &#123; 3, 13, 4, 7, 15, 2, 8, 14, 12, 0, 1, 10, 6, 9, 11, 5 &#125;,</span><br><span class="line">                        &#123; 0, 14, 7, 11, 10, 4, 13, 1, 5, 8, 12, 6, 9, 3, 2, 15 &#125;,</span><br><span class="line">                        &#123; 13, 8, 10, 1, 3, 15, 4, 2, 11, 6, 7, 12, 0, 5, 14, 9 &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123; // S_Box[2]</span><br><span class="line">                        &#123; 10, 0, 9, 14, 6, 3, 15, 5, 1, 13, 12, 7, 11, 4, 2, 8 &#125;,</span><br><span class="line">                        &#123; 13, 7, 0, 9, 3, 4, 6, 10, 2, 8, 5, 14, 12, 11, 15, 1 &#125;,</span><br><span class="line">                        &#123; 13, 6, 4, 9, 8, 15, 3, 0, 11, 1, 2, 12, 5, 10, 14, 7 &#125;,</span><br><span class="line">                        &#123; 1, 10, 13, 0, 6, 9, 8, 7, 4, 15, 14, 3, 11, 5, 2, 12 &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123; // S_Box[3]</span><br><span class="line">                        &#123; 7, 13, 14, 3, 0, 6, 9, 10, 1, 2, 8, 5, 11, 12, 4, 15 &#125;,</span><br><span class="line">                        &#123; 13, 8, 11, 5, 6, 15, 0, 3, 4, 7, 2, 12, 1, 10, 14, 9 &#125;,</span><br><span class="line">                        &#123; 10, 6, 9, 0, 12, 11, 7, 13, 15, 1, 3, 14, 5, 2, 8, 4 &#125;,</span><br><span class="line">                        &#123; 3, 15, 0, 6, 10, 1, 13, 8, 9, 4, 5, 11, 12, 7, 2, 14 &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123; // S_Box[4]</span><br><span class="line">                        &#123; 2, 12, 4, 1, 7, 10, 11, 6, 8, 5, 3, 15, 13, 0, 14, 9 &#125;,</span><br><span class="line">                        &#123; 14, 11, 2, 12, 4, 7, 13, 1, 5, 0, 15, 10, 3, 9, 8, 6 &#125;,</span><br><span class="line">                        &#123; 4, 2, 1, 11, 10, 13, 7, 8, 15, 9, 12, 5, 6, 3, 0, 14 &#125;,</span><br><span class="line">                        &#123; 11, 8, 12, 7, 1, 14, 2, 13, 6, 15, 0, 9, 10, 4, 5, 3 &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123; // S_Box[5]</span><br><span class="line">                        &#123; 12, 1, 10, 15, 9, 2, 6, 8, 0, 13, 3, 4, 14, 7, 5, 11 &#125;,</span><br><span class="line">                        &#123; 10, 15, 4, 2, 7, 12, 9, 5, 6, 1, 13, 14, 0, 11, 3, 8 &#125;,</span><br><span class="line">                        &#123; 9, 14, 15, 5, 2, 8, 12, 3, 7, 0, 4, 10, 1, 13, 11, 6 &#125;,</span><br><span class="line">                        &#123; 4, 3, 2, 12, 9, 5, 15, 10, 11, 14, 1, 7, 6, 0, 8, 13 &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123; // S_Box[6]</span><br><span class="line">                        &#123; 4, 11, 2, 14, 15, 0, 8, 13, 3, 12, 9, 7, 5, 10, 6, 1 &#125;,</span><br><span class="line">                        &#123; 13, 0, 11, 7, 4, 9, 1, 10, 14, 3, 5, 12, 2, 15, 8, 6 &#125;,</span><br><span class="line">                        &#123; 1, 4, 11, 13, 12, 3, 7, 14, 10, 15, 6, 8, 0, 5, 9, 2 &#125;,</span><br><span class="line">                        &#123; 6, 11, 13, 8, 1, 4, 10, 7, 9, 5, 0, 15, 14, 2, 3, 12 &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123; // S_Box[7]</span><br><span class="line">                        &#123; 13, 2, 8, 4, 6, 15, 11, 1, 10, 9, 3, 14, 5, 0, 12, 7 &#125;,</span><br><span class="line">                        &#123; 1, 15, 13, 8, 10, 3, 7, 4, 12, 5, 6, 11, 0, 14, 9, 2 &#125;,</span><br><span class="line">                        &#123; 7, 11, 4, 1, 9, 12, 14, 2, 0, 6, 10, 13, 15, 3, 5, 8 &#125;,</span><br><span class="line">                        &#123; 2, 1, 14, 7, 4, 10, 8, 13, 15, 12, 9, 0, 3, 5, 6, 11 &#125;</span><br><span class="line">                &#125; // S_Box[8]</span><br><span class="line">        &#125;;</span><br><span class="line">        static final int[] LeftMove = &#123;</span><br><span class="line">                1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1</span><br><span class="line">        &#125;; // 左移位置列表</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line">// 系统里用到的一些公共的功能性函数</span><br><span class="line"></span><br><span class="line">package cryptology;</span><br><span class="line"></span><br><span class="line">import java.util.HashMap;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by leif on 2016/6/21.</span><br><span class="line"> */</span><br><span class="line">public class util &#123;</span><br><span class="line">    /**</span><br><span class="line">     *  二进制转十进制</span><br><span class="line">     * @param two 二进制 string</span><br><span class="line">     * @return 十进制 int</span><br><span class="line">     */</span><br><span class="line">    public static int two2ten(String two)&#123;</span><br><span class="line">        String s = two;</span><br><span class="line">        int x = 0;</span><br><span class="line">        int pow = 0;</span><br><span class="line">        for (int i = s.length() - 1; i &gt;= 0; i--) &#123;</span><br><span class="line">            x += Math.pow(2, pow) * (s.charAt(i) == &apos;1&apos; ? 1 : 0);</span><br><span class="line">            pow ++;</span><br><span class="line">        &#125;</span><br><span class="line">        return x;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     *  二进制转十六进制</span><br><span class="line">     * @param two 二进制 string</span><br><span class="line">     * @return 十六进制 int</span><br><span class="line">     */</span><br><span class="line">    public static String two2hex(String bString)&#123;</span><br><span class="line">    if (bString == null || bString.equals(&quot;&quot;) || bString.length() % 8 != 0)  </span><br><span class="line">            return null;  </span><br><span class="line">        StringBuffer tmp = new StringBuffer();  </span><br><span class="line">        int iTmp = 0;  </span><br><span class="line">        for (int i = 0; i &lt; bString.length(); i += 4)  </span><br><span class="line">        &#123;  </span><br><span class="line">            iTmp = 0;  </span><br><span class="line">            for (int j = 0; j &lt; 4; j++)  </span><br><span class="line">            &#123;  </span><br><span class="line">                iTmp += Integer.parseInt(bString.substring(i + j, i + j + 1)) &lt;&lt; (4 - j - 1);  </span><br><span class="line">            &#125;  </span><br><span class="line">            tmp.append(Integer.toHexString(iTmp));  </span><br><span class="line">        &#125;  </span><br><span class="line">        return tmp.toString();  </span><br><span class="line">    &#125;  </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     *  将64位int数组转化为64位char数组</span><br><span class="line">     * @param mm int[64]</span><br><span class="line">     * @return char[64]</span><br><span class="line">     */</span><br><span class="line">    public static char[] int64tochar64(int[] mm)&#123;</span><br><span class="line">        @SuppressWarnings(&quot;unused&quot;)</span><br><span class="line">char[] g = new char[64];</span><br><span class="line">        String gg = new String();</span><br><span class="line">        for (int i = 0; i &lt; 64; i++)&#123;</span><br><span class="line">            gg += mm[i];</span><br><span class="line">        &#125;</span><br><span class="line">        return gg.toCharArray();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static HashMap&lt;Integer,char[]&gt; preMI(String mmmmmm)&#123;</span><br><span class="line">    String lmmmmmm = &quot;&quot;;</span><br><span class="line">    for(int i = 0; i &lt; mmmmmm.length(); i++)&#123;</span><br><span class="line">    lmmmmmm += Integer.toBinaryString(Integer.parseInt(mmmmmm.substring(i,i+1)));</span><br><span class="line">    &#125;</span><br><span class="line">    HashMap&lt;Integer, char[] &gt; tmmm = new HashMap&lt;&gt;();</span><br><span class="line">    char mmmmm[] = lmmmmmm.toCharArray();</span><br><span class="line">    char rm[] = new char[64];</span><br><span class="line">    int j = 0;</span><br><span class="line">    for(int i = 0; i &lt; lmmmmmm.length(); i++)&#123;</span><br><span class="line">    rm[i%64] = mmmmm[i];</span><br><span class="line">    if (i % 64 == 63) &#123;</span><br><span class="line">tmmm.put(j, rm);</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return tmmm;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * 明文初始化处理，将每一位转为一个64bit长度的string</span><br><span class="line">     * @param all</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static String[] all2string(String all)  &#123;</span><br><span class="line">byte byteall[] = all.getBytes();</span><br><span class="line">String allstring[] = new String[all.length()];</span><br><span class="line">for(int i = 0; i &lt; byteall.length; i++)&#123;</span><br><span class="line">allstring[i] =   String.format(&quot;%064d&quot;, Integer.parseInt(Integer.toBinaryString(byteall[i])));</span><br><span class="line">&#125;</span><br><span class="line">return allstring;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * 密文解密预处理，将密文每64bit截取成一个string</span><br><span class="line">     * @param all</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static String[] all222string(String all)  &#123;</span><br><span class="line">String allstring[] = new String[all.length()/64];</span><br><span class="line">for(int i = 0; i &lt; allstring.length; i++)&#123;</span><br><span class="line">allstring[i] =   all.substring(i*64,(i+1)*64);</span><br><span class="line">&#125;</span><br><span class="line">return allstring;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * 将解密结果的byte转为string，还原密文</span><br><span class="line">     * @param all</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static String byte2string(String all)  &#123;</span><br><span class="line">byte allstring[] = new byte[all.length()/64];</span><br><span class="line">for(int i = 0; i &lt; allstring.length; i++)&#123;</span><br><span class="line">allstring[i] =   (byte) two2ten(all.substring(i*64,(i+1)*64).substring(56, 64));</span><br><span class="line">&#125;</span><br><span class="line">return new String(allstring);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * 将任意格式的密钥获取hash值，格式化为char[64]</span><br><span class="line">     * @param k</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static char[] keypre(String k) &#123;</span><br><span class="line">String ha = String.format(&quot;%08d&quot;, k.hashCode());</span><br><span class="line">String kk = &quot;&quot;;</span><br><span class="line">for(int i = 0; i &lt; 8; i++)&#123;</span><br><span class="line">kk += String.format(&quot;%08d&quot;, Integer.parseInt(Integer.toBinaryString(Integer.parseInt(ha.substring(i, i+1)))));</span><br><span class="line">&#125;</span><br><span class="line">return kk.toCharArray();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      本文记录了笔者大二下学期应用密码学课程设计所做内容。
    
    </summary>
    
    
      <category term="Java" scheme="http://ericli.top/tags/Java/"/>
    
      <category term="code" scheme="http://ericli.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>rip协议Java模拟实现</title>
    <link href="http://ericli.top/2016/07/09/rip%E5%8D%8F%E8%AE%AEjava%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0/"/>
    <id>http://ericli.top/2016/07/09/rip协议java模拟实现/</id>
    <published>2016-07-08T16:00:00.000Z</published>
    <updated>2018-01-21T13:04:19.730Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>大二下学期的计算机网络原理课程设计</p></blockquote><hr><h3 id="已同步github"><a href="#已同步github" class="headerlink" title="已同步github"></a>已同步github</h3><h2 id="url-https-github-com-EricLi404-Java-Demos-tree-master-Rip-Demo"><a href="#url-https-github-com-EricLi404-Java-Demos-tree-master-Rip-Demo" class="headerlink" title="url:https://github.com/EricLi404/Java-Demos/tree/master/Rip-Demo"></a>url:<a href="https://github.com/EricLi404/Java-Demos/tree/master/Rip-Demo" target="_blank" rel="noopener">https://github.com/EricLi404/Java-Demos/tree/master/Rip-Demo</a></h2><h2 id="一、设计题目：距离矢量路由选择算法的模拟实现"><a href="#一、设计题目：距离矢量路由选择算法的模拟实现" class="headerlink" title="一、设计题目：距离矢量路由选择算法的模拟实现"></a>一、设计题目：距离矢量路由选择算法的模拟实现</h2><h2 id="二、设计要求"><a href="#二、设计要求" class="headerlink" title="二、设计要求"></a>二、设计要求</h2><p>（1）掌握距离矢量路由选择选择算法的工作原理。<br>（2）采用C、Java等编程语言实现距离矢量路由选择选择算法。<br>（3）算法输入：<br>带权图G，如图1所示。<br><img src="http://img.blog.csdn.net/20160709003245099" alt="这里写图片描述"><br>（4）算法输出：</p><ul><li>某个顶点v（路由器）在第i次周期后的整个路由表。</li><li>路由表的结构&lt;目的网络，跳数，下一跳&gt;</li></ul><h2 id="三、设计思路"><a href="#三、设计思路" class="headerlink" title="三、设计思路"></a>三、设计思路</h2><p>距离矢量路由选择选择算法有多种，本设计采用的是比较经典的RIP协议，根据设计要求，只要求输出路由器在第i次周期后的整个路由表，为突出设计要求，本设计简化了RIP协议，与RIPv1，RIPv2和RIPng相比，本设计精简了水平分割、毒性逆转和抑制计时功能，本设计采用手动触发更新，即：手动输入循环周期i次，然后执行i次更新，并输出结果。<br>系统中涉及到三个对象，network，router，routertable，分别表示网络空间，路由器，路由表。其中，系统一共具有1个网络，网络中包括至少一个路由器，每个路由器拥有一个路由表。<br>系统执行大致分为三个阶段：<br>阶段一，系统读取配置文件./config/network.properties，通过其中的配置项来初始化网络空间，建立路由表，建立邻接关系。<br>阶段二，系统提示用户输入周期i，用户将输入反馈给系统。<br>阶段三，系统根据用户输入，执行响应轮次的路由表更新，输出结果。<br>配置文件书写规则：<br>e.g. </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">routernum=6     //路由器数量</span><br><span class="line">networknum=7     //网络数量</span><br><span class="line">0=0              //左侧表示路由器编号，右侧表示网络编号</span><br><span class="line">1=0,1,3,4        //路由器和网络号都从0开始计数</span><br><span class="line">2=1,2//右侧为该路由器连接的网络，中间用英文&quot;,&quot;隔开</span><br><span class="line">3=3,6</span><br><span class="line">4=3</span><br><span class="line">5=4,5</span><br></pre></td></tr></table></figure><h2 id="四、源码"><a href="#四、源码" class="headerlink" title="四、源码"></a>四、源码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">//Index.java   主类</span><br><span class="line"></span><br><span class="line">package rip;</span><br><span class="line"></span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">public class Index &#123;</span><br><span class="line">public static void main(String[] args)&#123;</span><br><span class="line">Network network = new Network();</span><br><span class="line">network.initNetwork();</span><br><span class="line">network.setnearRouter();</span><br><span class="line">System.out.print(&quot;请输入循环轮次:&quot;);</span><br><span class="line">Scanner in = new Scanner(System.in);</span><br><span class="line">int i = in.nextInt();</span><br><span class="line">in.close();</span><br><span class="line">for(int j = 0; j &lt; i; j++)&#123;</span><br><span class="line">System.out.println(&quot;=========================循环轮次&quot;+(j+1)+&quot;===========================&quot;);</span><br><span class="line">network.changeAllRouter();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">//Network.java 网络空间类</span><br><span class="line"></span><br><span class="line">package rip;</span><br><span class="line"></span><br><span class="line">import java.util.HashMap;</span><br><span class="line"></span><br><span class="line">public class Network &#123;</span><br><span class="line">private  int   routernum;</span><br><span class="line">private  int   networknum;</span><br><span class="line">public Router[] routers;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public int getRouternum() &#123;</span><br><span class="line">return routernum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setRouternum(int routernum) &#123;</span><br><span class="line">this.routernum = routernum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public int getNetworknum() &#123;</span><br><span class="line">return networknum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setNetworknum(int networknum) &#123;</span><br><span class="line">this.networknum = networknum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public Router[] getRouters() &#123;</span><br><span class="line">return routers;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setRouters(Router[] routers) &#123;</span><br><span class="line">this.routers = routers;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public Network() &#123;</span><br><span class="line">super();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void initNetwork()&#123;</span><br><span class="line">HashMap&lt;String, String[]&gt; netconf = Util.readNetworkConfig();</span><br><span class="line">setRouternum(Integer.parseInt(netconf.get(&quot;routernum&quot;)[0]));</span><br><span class="line">setNetworknum(Integer.parseInt(netconf.get(&quot;networknum&quot;)[0]));</span><br><span class="line">//TODO 建立各路由器以及路由表       !important</span><br><span class="line">Router routerssss[] = new Router[routernum];</span><br><span class="line">for (int i = 0; i &lt; routernum; i++) &#123;</span><br><span class="line">HashMap&lt;Integer, String[]&gt; list = new HashMap&lt;&gt;();</span><br><span class="line">String[] strings = netconf.get(String.valueOf(i));</span><br><span class="line">for(int j = 0; j &lt; strings.length;j++)&#123;</span><br><span class="line">String[] temp = &#123;strings[j],&quot;1&quot;, String.valueOf(i)&#125;;</span><br><span class="line">list.put(j, temp);</span><br><span class="line">&#125;</span><br><span class="line">RouterTable routerTable = new RouterTable(list, i);</span><br><span class="line">Router router = new Router(i, routerTable);</span><br><span class="line">routerssss[i] = router;</span><br><span class="line">&#125;</span><br><span class="line">setRouters(routerssss);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setnearRouter()&#123;</span><br><span class="line">for (int i = 0; i &lt; routers.length; i++) &#123;</span><br><span class="line">String str1 = Util.intArray2string(routers[i].getNearNetwork());</span><br><span class="line">String str3 = &quot;&quot;;</span><br><span class="line">for(int j = 0; j &lt; routers.length; j++)&#123;</span><br><span class="line">String str2 = Util.intArray2string(routers[j].getNearNetwork());</span><br><span class="line">for(int k = 0; k &lt; str2.length(); k++)&#123;</span><br><span class="line">if (str1.contains(str2.substring(k, k+1))) &#123;</span><br><span class="line">str3 += j;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if (str3.length() &gt; 0) &#123;</span><br><span class="line">int p[] = new int[str3.length()];</span><br><span class="line">for (int j = 0; j &lt; str3.length(); j++) &#123;</span><br><span class="line">p[j] = Integer.parseInt(str3.substring(j, j+1));</span><br><span class="line">&#125;</span><br><span class="line">routers[i].setNearRouter(p);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void changeAllRouter()&#123;</span><br><span class="line">//TODO for 循环，每个路由器获取其临近路由器的路由表，然后更新自己的路由表</span><br><span class="line">for(int i = 0; i &lt; routers.length; i++)&#123;</span><br><span class="line">//System.out.println(&quot;外循环********************路由器&quot;+i+&quot;开始获取路由表&quot;);</span><br><span class="line">for(int j = 0; j &lt; routers[i].getNearRouter().length; j++)&#123;</span><br><span class="line">//System.out.println(&quot;内循环********************路由器了获取路由表&quot;+j);</span><br><span class="line">routers[i].changeRouterTable(routers[routers[i].getNearRouter()[j]].getRouterTable());</span><br><span class="line">&#125;</span><br><span class="line">routers[i].echoRoutertable();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line">// Router.java 路由器类</span><br><span class="line"></span><br><span class="line">package rip;</span><br><span class="line"></span><br><span class="line">import java.util.HashMap;</span><br><span class="line"></span><br><span class="line">public class Router &#123;</span><br><span class="line">private  final int routerId;</span><br><span class="line">private RouterTable routerTable;</span><br><span class="line">private int[] nearRouter;</span><br><span class="line">private int[] nearNetwork;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public RouterTable getRouterTable() &#123;</span><br><span class="line">return routerTable;</span><br><span class="line">&#125;</span><br><span class="line">public void setRouterTable(RouterTable routerTable) &#123;</span><br><span class="line">this.routerTable = routerTable;</span><br><span class="line">&#125;</span><br><span class="line">public void changeRouterTable(RouterTable otherRouterTable)&#123;</span><br><span class="line">// 规则：</span><br><span class="line">// 1.  传入的为其临近路由器的路由表</span><br><span class="line">// 2. 解析路由表</span><br><span class="line">// 3. 如果有自己路由表里有的网络，检查跳数是否为15，不为15进行以下操作</span><br><span class="line">// 4. 如果“跳数+1” 小于 本路由表对应条目的跳数，则修改记录</span><br><span class="line">// 5. 修改记录 “网络号(不变)”，“跳数+1”,“下一跳路由(该路由条目的来源路由)” </span><br><span class="line">// 6. else如果有本自己路由表里没有的网路，检查跳数是否为15，不为15进行以下操作</span><br><span class="line">// 7. 添加记录 “网络号”，“跳数+1”,“下一跳路由(该路由条目的来源路由)”</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//将自己的路由表里 所有的网络号建立一个String，所有的跳数建立一个String，</span><br><span class="line">//遍历外来路由表的各个网络号，判断是否存在相同的值</span><br><span class="line">//如果存在 判断跳数（1.是否不等于15，2，是否小于自己对应的跳数+1）</span><br><span class="line">//          如果满足，修改路由表对应数据</span><br><span class="line">// 如果不满足。do nothing</span><br><span class="line">//如果不存在，判断跳数是否不等于15，</span><br><span class="line">//            如果满足，添加该路由条目</span><br><span class="line"></span><br><span class="line">HashMap&lt;Integer, String[] &gt; otherList = otherRouterTable.getList();</span><br><span class="line">HashMap&lt;Integer, String[] &gt; selfList = routerTable.getList();</span><br><span class="line">String otherNetnum = &quot;&quot;;</span><br><span class="line">String otherTiaonum = &quot;&quot;;</span><br><span class="line">String selfNetnum = &quot;&quot;;</span><br><span class="line">String selfTiaonum = &quot;&quot;;</span><br><span class="line">String selfShouldMod = &quot;&quot;;</span><br><span class="line">String otherShouldMod = &quot;&quot;;</span><br><span class="line">String shouldAdd = &quot;&quot;;</span><br><span class="line">for(int i = 0 ; i &lt; otherList.size(); i++)&#123;</span><br><span class="line">otherNetnum += otherList.get(i)[0];</span><br><span class="line">otherTiaonum += otherList.get(i)[1];</span><br><span class="line">&#125;</span><br><span class="line">for(int i = 0; i &lt; selfList.size(); i++)&#123;</span><br><span class="line">selfNetnum += selfList.get(i)[0];</span><br><span class="line">selfTiaonum += selfList.get(i)[1];</span><br><span class="line">&#125;</span><br><span class="line">for(int i = 0; i &lt; otherNetnum.length(); i++)&#123;</span><br><span class="line">//System.out.println(&quot;第&quot;+i+&quot;循环检验========================&quot;);</span><br><span class="line">int res = selfNetnum.indexOf(otherNetnum.substring(i,i+1));</span><br><span class="line">int p = Integer.parseInt(otherTiaonum.substring(i, i+1));</span><br><span class="line">if (res != -1) &#123;</span><br><span class="line">int q = Integer.parseInt(selfTiaonum.substring(res, res+1));</span><br><span class="line">if (p &lt; 15) &#123;</span><br><span class="line">if ((p+1) &lt; q ) &#123;</span><br><span class="line">//TODO 修改路由表对应数据</span><br><span class="line">//System.out.println(&quot;premod=======&quot;+selfNetnum.substring(res, res+1)+&quot;--------&quot;+otherNetnum.substring(i,i+1));</span><br><span class="line">selfShouldMod += String.valueOf(res);</span><br><span class="line">otherShouldMod += String.valueOf(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;else if (res == -1) &#123;</span><br><span class="line">if (p &lt; 15) &#123;</span><br><span class="line">//TODO 添加该条目</span><br><span class="line">//System.out.println(&quot;preadd=====&quot;+otherNetnum.substring(i,i+1));</span><br><span class="line">shouldAdd += String.valueOf(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;else &#123;</span><br><span class="line">System.err.println(&quot;core change err&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if (selfShouldMod.length() &gt; 0) &#123;</span><br><span class="line">for(int i = 0; i &lt; selfShouldMod.length(); i++)&#123;</span><br><span class="line">//System.out.println(&quot;mod&quot;);</span><br><span class="line">selfList.remove(selfShouldMod.substring(i,i+1));</span><br><span class="line">String newChange[] = &#123;</span><br><span class="line">otherList.get(Integer.parseInt(otherShouldMod.substring(i, i+1)))[0],</span><br><span class="line">String.valueOf(Integer.parseInt(otherList.get(Integer.parseInt(otherShouldMod.substring(i,i+1)))[1])+1),</span><br><span class="line">String.valueOf(otherRouterTable.getRouterID())</span><br><span class="line">&#125;; </span><br><span class="line">selfList.put(Integer.parseInt(selfShouldMod.substring(i,i+1)), newChange);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if (shouldAdd.length() &gt; 0) &#123;</span><br><span class="line">//System.out.println(&quot;1111111111111self.size=================&quot;+selfList.size());</span><br><span class="line">int len = selfList.size();</span><br><span class="line">for(int i = 0; i &lt; shouldAdd.length(); i++)&#123;</span><br><span class="line">//System.out.println(&quot;add&quot;);</span><br><span class="line">String newChange[] = &#123;</span><br><span class="line">otherList.get(Integer.parseInt(shouldAdd.substring(i, i+1)))[0],</span><br><span class="line">String.valueOf(Integer.parseInt(otherList.get(Integer.parseInt(shouldAdd.substring(i,i+1)))[1])+1),</span><br><span class="line">String.valueOf(otherRouterTable.getRouterID())</span><br><span class="line">&#125;; </span><br><span class="line">selfList.put(len+i, newChange);</span><br><span class="line">//System.out.println(&quot;self.size=================&quot;+selfList.size());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">routerTable.setList(selfList);</span><br><span class="line">setRouterTable(routerTable);</span><br><span class="line">&#125;</span><br><span class="line">public int[] getNearRouter() &#123;</span><br><span class="line">return nearRouter;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public void setNearRouter(int[] nearRouter) &#123;</span><br><span class="line">this.nearRouter = nearRouter;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public int[] getNearNetwork() &#123;</span><br><span class="line">return nearNetwork;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setNearNetwork(int[] nearNetwork) &#123;</span><br><span class="line">this.nearNetwork = nearNetwork;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public int getRouterId() &#123;</span><br><span class="line">return routerId;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void echoRoutertable()&#123;</span><br><span class="line">RouterTable rtTables = getRouterTable(); </span><br><span class="line">HashMap&lt;Integer, String[]&gt; list = rtTables.getList();</span><br><span class="line">System.out.println(&quot;*******路由器 &quot;+getRouterTable().getRouterID()+&quot; 路由表******&quot;);</span><br><span class="line">for (int i = 0; i &lt; list.size(); i++) &#123;</span><br><span class="line">String[] pStrings = list.get(i);</span><br><span class="line">System.out.println(&quot;网络：&quot;+pStrings[0]+&quot;  |   &quot;+&quot;跳数：&quot;+pStrings[1]+&quot;   |   &quot;+&quot;下一跳路由器： &quot;+pStrings[2]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public Router(int routerId, RouterTable routerTable) &#123;</span><br><span class="line">super();</span><br><span class="line">this.routerId = routerId;</span><br><span class="line">this.routerTable = routerTable;</span><br><span class="line">//TODO 记录临近的网络</span><br><span class="line">int[] p = new int[routerTable.getList().size()];</span><br><span class="line">for(int i = 0; i &lt; routerTable.getList().size(); i++)&#123;</span><br><span class="line">p[i] = Integer.parseInt(routerTable.getList().get(i)[0]);</span><br><span class="line">&#125;</span><br><span class="line">this.nearNetwork = p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">// RouterTable.java  路由表类</span><br><span class="line"></span><br><span class="line">package rip;</span><br><span class="line"></span><br><span class="line">import java.util.HashMap;</span><br><span class="line"></span><br><span class="line">public class RouterTable &#123;</span><br><span class="line">private HashMap&lt;Integer, String[] &gt; list;</span><br><span class="line">private int routerID;</span><br><span class="line"></span><br><span class="line">public HashMap&lt;Integer, String[]&gt; getList() &#123;</span><br><span class="line">return list;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setList(HashMap&lt;Integer, String[]&gt; list) &#123;</span><br><span class="line">this.list = list;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public int getRouterID() &#123;</span><br><span class="line">return routerID;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setRouterID(int routerID) &#123;</span><br><span class="line">this.routerID = routerID;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public RouterTable(HashMap&lt;Integer, String[]&gt; list, int routerID) &#123;</span><br><span class="line">super();</span><br><span class="line">this.list = list;</span><br><span class="line">this.routerID = routerID;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">// Util.java  通用函数类</span><br><span class="line">package rip;</span><br><span class="line"></span><br><span class="line">import java.io.BufferedReader;</span><br><span class="line">import java.io.FileInputStream;</span><br><span class="line">import java.io.FileNotFoundException;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.InputStream;</span><br><span class="line">import java.io.InputStreamReader;</span><br><span class="line">import java.util.Enumeration;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Properties;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class Util &#123;</span><br><span class="line">private final static String propertiesUrl = &quot;./config/network.properties&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 读取网络配置信息</span><br><span class="line"> * ###网络配置信息相关文档见readme.md</span><br><span class="line"> * @return hashmap</span><br><span class="line"> */</span><br><span class="line">public static HashMap&lt;String, String[]&gt; readNetworkConfig()&#123;</span><br><span class="line">HashMap&lt;String, String[]&gt; netconf = new HashMap&lt;&gt;();</span><br><span class="line">Properties Networkconfig = new Properties();</span><br><span class="line">try &#123;</span><br><span class="line">Networkconfig.load(new FileInputStream(propertiesUrl));</span><br><span class="line">&#125; catch (FileNotFoundException e) &#123;</span><br><span class="line">// TODO Auto-generated catch block</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; catch (IOException e) &#123;</span><br><span class="line">// TODO Auto-generated catch block</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"> @SuppressWarnings(&quot;rawtypes&quot;)</span><br><span class="line">Enumeration enumm = Networkconfig.propertyNames();</span><br><span class="line">          while(enumm.hasMoreElements()) &#123;</span><br><span class="line">              String strKey = (String) enumm.nextElement();</span><br><span class="line">              String strValue = Networkconfig.getProperty(strKey);</span><br><span class="line">              String[] strValueArray = strValue.split(&quot;,&quot;);</span><br><span class="line">              netconf.put(strKey, strValueArray);</span><br><span class="line">       &#125;</span><br><span class="line">          return netconf;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 将int[]数组转为string</span><br><span class="line"> * @param intarr int[]</span><br><span class="line"> * @return string</span><br><span class="line"> */</span><br><span class="line">public static String intArray2string(int intarr[])&#123;</span><br><span class="line">String string = &quot;&quot;;</span><br><span class="line">for(int i = 0; i &lt; intarr.length; i++)&#123;</span><br><span class="line">string += String.valueOf(intarr[i]);</span><br><span class="line">&#125;</span><br><span class="line">return string;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static String callCmd(String cmd) throws IOException, InterruptedException &#123;</span><br><span class="line">                // 使用Runtime来执行command，生成Process对象</span><br><span class="line">                Process process = Runtime.getRuntime().exec(new String[] &#123; &quot;/bin/sh&quot;, &quot;-c&quot;, cmd &#125;);</span><br><span class="line">                // int exitCode = process.waitFor();</span><br><span class="line">                // 取得命令结果的输出流</span><br><span class="line">                InputStream is = process.getInputStream();</span><br><span class="line">                // 用一个读输出流类去读</span><br><span class="line">                InputStreamReader isr = new InputStreamReader(is);</span><br><span class="line">                // 用缓冲器读行</span><br><span class="line">                BufferedReader br = new BufferedReader(isr);</span><br><span class="line">                String line = null;</span><br><span class="line">                StringBuilder sb = new StringBuilder();</span><br><span class="line">                while ((line = br.readLine()) != null) &#123;</span><br><span class="line">                    System.out.println(line);</span><br><span class="line">                    sb.append(line);</span><br><span class="line">                &#125;</span><br><span class="line">                is.close();</span><br><span class="line">                isr.close();</span><br><span class="line">                br.close();</span><br><span class="line">                return sb.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">         </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      本文记录了笔者大二下学期的计算机网络原理课程设计所做内容。
    
    </summary>
    
    
      <category term="Java" scheme="http://ericli.top/tags/Java/"/>
    
      <category term="code" scheme="http://ericli.top/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>jTable自适应列宽度</title>
    <link href="http://ericli.top/2016/06/12/jTable%E8%87%AA%E9%80%82%E5%BA%94%E5%88%97%E5%AE%BD%E5%BA%A6/"/>
    <id>http://ericli.top/2016/06/12/jTable自适应列宽度/</id>
    <published>2016-06-11T16:00:00.000Z</published>
    <updated>2018-01-21T13:00:42.490Z</updated>
    
    <content type="html"><![CDATA[<p>使用：把要设置自适应宽度的jtable传入既可。<br>为了显示效果，每个列宽我还额外加了10px，如果想修改这个值，可以修改<code>column.setWidth(width + myTable.getIntercellSpacing().width + 10);</code></p><pre><code>/** * 使jtable自适应列宽度 * @param myTable */public static void FitTableColumns(JTable myTable) {    JTableHeader header = myTable.getTableHeader();    int rowCount = myTable.getRowCount();    Enumeration columns = myTable.getColumnModel().getColumns();    while (columns.hasMoreElements()) {        TableColumn column = (TableColumn) columns.nextElement();        int col = header.getColumnModel().getColumnIndex(column.getIdentifier());        int width = (int) myTable.getTableHeader().getDefaultRenderer()                .getTableCellRendererComponent(myTable, column.getIdentifier(), false, false, -1, col)                .getPreferredSize().getWidth();        for (int row = 0; row &lt; rowCount; row++) {            int preferedWidth = (int) myTable.getCellRenderer(row, col)                    .getTableCellRendererComponent(myTable, myTable.getValueAt(row, col), false, false, row, col)                    .getPreferredSize().getWidth();            width = Math.max(width, preferedWidth);        }        header.setResizingColumn(column);        column.setWidth(width + myTable.getIntercellSpacing().width + 10);    }}</code></pre>]]></content>
    
    <summary type="html">
    
      本文记录了笔者JavaSE课程学习中解决的一个问题。
    
    </summary>
    
    
      <category term="Java" scheme="http://ericli.top/tags/Java/"/>
    
      <category term="code" scheme="http://ericli.top/tags/code/"/>
    
  </entry>
  
</feed>
